{"version":3,"sources":["webpack:///src/app/register/register.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/user/user.component.ts","webpack:///src/app/user/user.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/error/error.component.ts","webpack:///src/app/error/error.component.html","webpack:///src/app/student-detail/student-detail.component.html","webpack:///src/app/student-detail/action.component.html","webpack:///src/app/student-detail/student-detail.component.ts","webpack:///src/app/services/routes.service.ts","webpack:///src/app/create/create.component.html","webpack:///src/app/create/create.component.ts","webpack:///src/app/services/notification.service.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/error-interceptor.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/create/mime-type.validator.ts","webpack:///src/app/app.module.ts","webpack:///src/app/material-elevation.directive.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/material/material.module.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/state.service.ts","webpack:///src/app/services/rest.service.ts","webpack:///src/app/list/list.component.html","webpack:///src/app/list/list.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["router","RegisterComponent","route","auth","alert","danger","hide","registerUserData","match","register","getLogin","navigate","f","value","console","log","name","email","password","registerUser","resp","status","resetForm","selector","templateUrl","styleUrls","UserComponent","history","state","username","useremail","details","environment","production","ErrorComponent","data","StudentDetailComponent","dialog","dialogRef","rest","notifService","_snackbar","editmode","student","studentData","id","close","msg","action","undo","ref","open","duration","addNotifs","onAction","subscribe","afterDismissed","deleteStudent","_id","updateList","onClose","message","ActionComponent","afterClosed","result","onDelete","openDialog","RoutesService","rt","providedIn","CreateComponent","routes","_snackBar","studentId","mode","fileChanges","getCurrentNavigation","extras","undefined","downloadImageStudent","form","validators","required","department","address","joining_year","year","passing_year","phone","image","dataBlob","asyncValidators","downloadImage","patchValue","get","updateValueAndValidity","imgPreview","baseUrl","$event","file","target","files","reader","FileReader","onload","readAsDataURL","parseInt","addStudent","updateStudent","window","back","onSubmit","onImagePicked","NotificationService","notifs","count","notifsObserver","notifsObserver$","asObservable","notifsCountObserver","notifsCountObserver$","notif","date","Date","concat","next","DashboardComponent","toggle","years","yearsData","streams","streamsData","totalStudents","fetchData","getAllStudents","students","length","forEach","stream","getStudents","res","push","chart1","type","labels","datasets","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","min","max","chart2","legend","position","num","filterYear","s","filterDept","onClick","onStream","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","ErrorInterceptor","handle","pipe","error","width","AppComponent","title","mimType","control","fileReader","obs","create","observer","addEventListener","array","Uint8Array","subarray","header","isValid","i","toString","invalidtype","complete","readAsArrayBuffer","AppModule","events","event","setRoute","url","provide","useClass","multi","declarations","imports","providers","entryComponents","bootstrap","MaterialElevationDirective","element","renderer","defaultElevation","raisedElevation","setElevation","_changes","amount","classesToRemove","Array","from","nativeElement","classList","filter","c","startsWith","removeClass","newClass","addClass","HeaderComponent","http","stateServ","isRoundButton","isLogged","searchText","loginObserver$","login","user","loadLogin","notifCount","getAllNotifs","href","logout","getStudentonSearch","search","FooterComponent","newMode","materialComponents","MaterialModule","useValue","AuthService","loginObserver","localStorage","getItem","JSON","parse","post","toPromise","setItem","stringify","clear","StateService","listUpdates","searchUpdates","listUpdates$","searchUpdates$","results","RestService","studentsUpdated","paramMap","qparam","key0","query","queries","formatQuery","postData","FormData","key","append","imageId","responseType","put","ListComponent","listView","sort","a","b","localeCompare","index","clearFilter","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","LoginComponent","loginUser","storeLogin","bootstrapModule","err","webpackEmptyAsyncContext","Promise","then"],"mappings":"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","file":"main-es5.js","sourcesContent":["<div class=\"content\">\n    <div *ngIf=\"route.route==='/register'\" class=\"register\">\n        <mat-card class=\"mat-elevation-z2\">\n            <mat-card-title style=\"text-align: center;margin-top: 20px;\">Sign Up</mat-card-title>\n\n            <div *ngIf=\"alert\" style=\"width:80%;margin: 0 auto;margin-top:5%;\"\n                class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n                <strong>Success</strong> Data Saved!\n                <button (click)=\"onClose()\" type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                    <span style=\"float: right;\" aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n\n            <div *ngIf=\"danger\" style=\"width:80%;margin: 0 auto;margin-top:5%;\"\n                class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n                <strong>User already exists!</strong>Data not saved!\n                <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                    <span style=\"float: right;\" aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n\n\n            <form (ngSubmit)=\"registerUser(f)\" #f=\"ngForm\">\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Name\" type=\"name\" name=\"name\" required ngModel #name=\"ngModel\">\n                </mat-form-field>\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Email\" type=\"email\" name=\"email\" required ngModel #email=\"ngModel\">\n                    <mat-icon matSuffix style=\"font-size:18px;\">email</mat-icon>\n                </mat-form-field>\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Password\" name=\"password\" [type]=\"hide ? 'password' : 'text'\" ngModel\n                        #password=\"ngModel\" required >\n                    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                        [attr.aria-pressed]=\"hide\">\n                        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                    </button>\n                    <!-- <mat-hint>Password must be valid</mat-hint> -->\n                    <mat-error><div *ngIf=\"password.errors\">Password must be valid</div></mat-error>\n\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput placeholder=\"Confirm your password\" name=\"confirmPassword\"\n                        [type]=\"hide ? 'password' : 'text'\" #confirmPassword=\"ngModel\" ngModel required>\n                    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                        [attr.aria-pressed]=\"hide\">\n                        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                    </button>\n\n                </mat-form-field>\n                \n\n\n                <mat-card-actions style=\"margin-top: 10px;\"><button [disabled]=\"!f.valid && password.value===confirmPassword.value\" mat-raised-button\n                        color=\"primary\" type=\"submit\">Register</button></mat-card-actions>\n                <mat-card-actions style=\"text-align: center;\">\n                    <span> Already have an account?</span>\n                    <button (click)=\"router.navigate(['login'])\" mat-button type=\"button\" style=\"width: 15%;\">\n                        Login\n                    </button></mat-card-actions>\n            </form>\n\n        </mat-card>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { RoutesService } from '../services/routes.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  alert:boolean=false;\n  danger=false;\n\n  constructor(public route: RoutesService,\n    private auth: AuthService,\n    public router: Router) { }\n\n  ngOnInit(): void {\n    if (this.auth.getLogin()) {\n      this.router.navigate(['dashboard']);\n    }\n  }\n\n  hide = true;\n  registerUserData =<any>{};\n  match=false;\n\n  register = false;\n  \n async registerUser(f: NgForm) {\n    const value = f.value;\n    console.log(value);\n    const { name, email, password } = value;\n    const resp = await this.auth.registerUser({ name, email, password });\n    console.log(resp);\n    \n    if (resp.status) {\n       //this.tab();\n       this.alert=true;\n       f.resetForm();\n     }\n     else{\n       this.danger=true;\n\n     }\n  }\n\n  onClose(){\n    this.alert=false;\n    this.router.navigate(['login'])\n\n  }\n\n  tab() {\n    this.register = !this.register;\n  }\n}\n  ","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  name: string ;\n  email:string;\n  constructor() {}\n\n  ngOnInit(): void {\n    this.name=history.state.username;\n    this.email=history.state.useremail;\n    this.details();\n  }\ndetails(){\nconsole.log(history.state.name,history.state.email)\n}\n}\n","<mat-card class=\"card\">\n    <mat-card-title style=\"text-align: center;margin: 10px;\">User Details</mat-card-title>\n    <mat-card-content>\n        <button mat-icon-button><mat-icon>create</mat-icon></button>\n        <p><label class=\"mat-h3\">User Name</label>\n            <span class=\"mat-h4\" style=\"margin-left: 5px; font-weight:bold;\">{{name}}</span></p>\n            <p><label class=\"mat-h3\">User Email</label>\n                <span class=\"mat-h4\" style=\"margin-left: 10px; font-weight:bold;\">{{email}}</span></p>\n        \n\n    </mat-card-content>\n</mat-card>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, inject, Inject} from '@angular/core'\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog'\n@Component({\ntemplateUrl:'./error.component.html'\n})\n\nexport class ErrorComponent{\n\nconstructor(@Inject(MAT_DIALOG_DATA) public data:{message:string}){}\n\n}","<h3 mat-dialog-title>Error!!</h3>\n<div mat-dialog-content> \n    <p class=\"mat-body-1\">{{data.message}}</p>\n</div>\n<div mat-dialog-actions>\n    <button mat-button mat-dialog-close style=\"border: none;outline: none;\">Okay</button>\n</div>","<div class=\"container\">\n    <div class=\"options\">\n        <button mat-icon-button matTooltip=\"Edit Details\" (click)=\"openDialog('Edit')\" >\n            <mat-icon>create</mat-icon>\n        </button>\n        <button mat-icon-button matTooltip=\"Copy Details\" (click)=\"openDialog('Copy')\">\n            <mat-icon>content_copy</mat-icon>\n        </button>\n        <button mat-icon-button matTooltip=\"Delete Details\" (click)=\"openDialog('Delete')\">\n                <mat-icon>delete</mat-icon>\n        </button>\n\n        <button mat-icon-button matTooltip=\"Close\" (click)=\"onClose()\">\n            <mat-icon>close</mat-icon>\n        </button>\n\n    </div>\n    <br>\n\n    <div class=\"content\">\n        <mat-list>\n            <img matListAvatar [src]=\"'http://localhost:3000/images/'+student.image\" alt=\"Image of {{student.name}}\"\n                id=\"profile\">\n            <mat-list-item>\n                <div style=\"margin:10px 0;\">\n                    <!-- <span class=\"mat-body-strong\" style=\"color:grey;display:inline-block;\">Name:</span> -->\n                    <span class=\"mat-headline\" style=\"font-weight:800;\">{{student.name}}</span>\n                </div>\n            </mat-list-item>\n            <mat-list-item style=\"display: flex;\">\n                <div style=\"margin-right: 25px;\">\n                    <span class=\"mat-body-strong\" style=\"color:grey;display:inline-block;\">Year:</span>\n                    <span class=\"mat-h3\" *ngIf=\"student.year==1\">{{student.year+\"st\"}}</span>\n                    <span class=\"mat-h3\" *ngIf=\"student.year==2\">{{student.year+\"nd\"}}</span>\n                    <span class=\"mat-h3\" *ngIf=\"student.year==3\">{{student.year+\"rd\"}}</span>\n                    <span class=\"mat-h3\" *ngIf=\"student.year==4\">{{student.year+\"th\"}}</span>\n                </div>\n                <div>\n                    <span class=\"mat-body-strong\" style=\"color:grey;display:inline-block;\">Department:</span>\n                    <span class=\"mat-h3\">{{student.department}}</span>\n\n                </div>\n            </mat-list-item>\n\n            <mat-list-item style=\"display: flex;\">\n                <div style=\"margin-right: 25px;\">\n                    <span class=\"mat-body-strong\" style=\"color:grey;display:inline-block;\">Joining\n                        Year:</span>\n                    <span class=\"mat-h3\">{{student.joining_year}}</span>\n                </div>\n                <div>\n                    <span class=\"mat-body-strong\" style=\"color:grey;display:inline-block;\">Expected Graduation\n                        Passing:</span>\n                    <span class=\"mat-h3\">{{student.passing_year}}</span>\n\n                </div>\n            </mat-list-item>\n\n            <mat-list-item>\n                <div style=\"display: flex;\">\n                    <span>\n                        <mat-icon style=\"font-size: 20px;\">email</mat-icon>\n                    </span>\n                    <span class=\"mat-h4\">\n                        {{student.email}}\n                    </span>\n                </div>\n\n            </mat-list-item>\n            <mat-list-item>\n                <div style=\"display: flex;\">\n                    <span>\n                        <mat-icon style=\"font-size: 20px;\">home</mat-icon>\n                    </span>\n                    <span class=\"mat-h4\">\n                        {{student.address}}\n                    </span>\n                </div>\n\n            </mat-list-item>\n\n            <mat-list-item>\n                <div style=\"display: flex;\">\n                    <span>\n                        <mat-icon style=\"font-size: 20px;\">phone</mat-icon>\n                    </span>\n                    <span class=\"mat-h4\">\n                        {{student.phone}}\n                    </span>\n                </div>\n\n            </mat-list-item>\n        </mat-list>\n\n    </div>\n    </div>\n","<div class=\"content\">\n    <p>Are you sure you want to {{data.message}}?</p>\n    <mat-dialog-actions>\n\n        <button *ngIf=\"data.message==='Edit'\" mat-button (click)=\"router.navigate(['/editStudent'],{state: {data: student}})\"\n            mat-dialog-close>Yes,sure</button>\n            <button *ngIf=\"data.message==='Copy'\" mat-button (click)=\"router.navigate(['/newStudent'],{state: {data: student}})\"\n            mat-dialog-close>Yes,sure</button>\n        <button *ngIf=\"data.message==='Delete'\" mat-button type=\"button\" mat-dialog-close\n           >Yes,sure</button>\n        <button mat-button mat-dialog-close>Close</button>\n\n    </mat-dialog-actions>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialogConfig, MatDialog } from '@angular/material/dialog';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n// import { StudentService } from '../students.service';\n// import { Student } from '../student.model';\nimport { Student } from '../models/student.model';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { RestService } from '../services/rest.service';\nimport { StateService } from '../services/state.service';\nimport { NotificationService } from '../services/notification.service';\nimport { async } from '@angular/core/testing';\n\n\n\n@Component({\n  selector: 'app-student-detail',\n  templateUrl: './student-detail.component.html',\n  styleUrls: ['./student-detail.component.css']\n})\n\nexport class StudentDetailComponent implements OnInit {\n\n  editmode = false;\n  student: Student;\n  id: string;\n\n  constructor(\n    public dialog: MatDialog,\n    private dialogRef: MatDialogRef<StudentDetailComponent>,\n    private route: Router, private router: ActivatedRoute,\n    private rest: RestService, private notifService: NotificationService,\n    // tslint:disable-next-line: variable-name\n    private _snackbar: MatSnackBar,\n    private state: StateService,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n\n    this.student = data.studentData;\n    this.id = data.id;\n\n\n  }\n\n  ngOnInit() {\n    // console.log(this.student, this.id)\n  }\n\n  save() {\n    // console.log(this.descriptFion)\n    console.log('saved');\n\n  }\n\n  onClose() {\n    console.log('closed');\n    this.dialogRef.close();\n  }\n\n  onEdit() {\n    this.editmode = true;\n    /// this.openDialog(\"Edit\");\n    // this.onClose();\n\n  }\n\n  onCopy() {\n    console.log('copied');\n    // this.onClose();\n  }\n\n  async onDelete() {\n    // this.studentService.deleteStudent(this.id);\n    // this.openDialog(\"Delete\");\n    console.log(this.student);\n    const msg = 'Student Deleted';\n    const action = 'Undo';\n    let undo = false;\n    const ref = this._snackbar.open(msg, action, {\n      duration: 2000,\n    });\n    this.notifService.addNotifs('Deleting student');\n    ref.onAction().subscribe(() => undo = true);\n    ref.afterDismissed().subscribe(async () => {\n      if (!undo) {\n        const resp = await (this.rest.deleteStudent(this.student._id));\n        if (resp.status) {\n          // alert('Student deleted');\n          this.notifService.addNotifs('Deleted student');\n        }\n      }\n      else {\n        // alert('Student not deleted');\n        this.notifService.addNotifs('Data Deletion cancelled');\n      }\n      this.state.updateList();\n    });\n    // console.log(this.notifService.getAllNotifs)\n    this.onClose();\n  }\n\n  openDialog(message: string) {\n\n    const dialogRef = this.dialog.open(ActionComponent, {\n      data: {\n        message,\n        student: this.student\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      // tslint:disable-next-line: triple-equals\n      if (message == 'Delete') {\n        this.dialogRef.close();\n        this.onDelete();\n      }\n      // tslint:disable-next-line: triple-equals\n      else if (message == 'Edit') {\n        this.dialogRef.close();\n        this.onClose();\n\n      }\n    });\n  }\n}\n\n\n\n@Component({\n  selector: 'app-action',\n  templateUrl: 'action.component.html',\n})\nexport class ActionComponent {\n  student: Student;\n  constructor(public dialogRef: MatDialogRef<ActionComponent>, @Inject(MAT_DIALOG_DATA) public data: any, public router: Router) {\n\n    this.student = data.student;\n  }\n\n  onYes() {\n    this.dialogRef.close({ data: 'editing' });\n  }\n}\n\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoutesService {\n  route: string;\n  constructor() {\n    this.route = '';\n  }\n\n  setRoute(rt: string) {\n    console.log(rt);\n    this.route = rt;\n  }\n}\n","<div class=\"newForm\">\n    <mat-card class=\"mat-elevation-z4\">\n        <mat-card-subtitle>*All fields are required</mat-card-subtitle>\n        <form [formGroup]=\"form\" name=\"form\" (ngSubmit)=\"onSubmit()\">\n            \n                <!-- <button mat-stroke-button type=\"button\" (click)=\"filePicker.click()\">Pick Image</button> -->\n             <input type=\"file\" #filePicker (change)=\"onImagePicked($event)\">\n            \n            <div class=\"image-preview\" (click)=\"filePicker.click()\">\n                <img matTooltip=\"Upload Image\" class=\"default\" *ngIf=\"!imgPreview\"\n                    src=\"https://cdn.onlinewebfonts.com/svg/img_508039.png\">\n                <img [src]=\"imgPreview\" class=\"uploaded\" *ngIf=\"imgPreview && form.get('image').valid\" [alt]=\"form.value.name\">\n            </div>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Name\" formControlName=\"name\" type=\"text\">\n                <mat-error *ngIf=\"form.get('name').invalid && form.get('name').touched\">This field is required!\n                </mat-error>\n            </mat-form-field> \n\n            <!-- <div formGroupName=\"name\" style=\"display: flex;\">\n                <mat-form-field class=\"example-full-width\">\n                <mat-label>First name</mat-label>\n                <input matInput  formControlName=\"firstname\" type=\"text\">\n              </mat-form-field>\n              <mat-form-field class=\"example-full-width\">\n                <mat-label>Last Name</mat-label>\n                <input matInput  formControlName=\"lastname\" type=\"text\">\n              </mat-form-field>\n            </div> -->\n\n            <div style=\"display: flex;\">\n                <mat-form-field style=\"margin-right:4%;width:25%\">\n                    <mat-label>Year</mat-label>\n                    <mat-select formControlName=\"year\">\n                        <mat-option [value]=\"1\">1</mat-option>\n                        <mat-option [value]=\"2\">2</mat-option>\n                        <mat-option [value]=\"3\">3</mat-option>\n                        <mat-option [value]=\"4\">4</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"form.get('year').invalid && form.get('year').touched\">\n                        This field is required!</mat-error>\n                </mat-form-field>\n\n                <mat-form-field style=\"width: 30%;\">\n                    <mat-label>Department</mat-label>\n                    <mat-select formControlName=\"department\">\n                        <mat-option value=\"IT\">IT</mat-option>\n                        <mat-option value=\"CSE\">CSE</mat-option>\n                        <mat-option value=\"ECE\">ECE</mat-option>\n                        <mat-option value=\"EE\">EE</mat-option>\n                        <mat-option value=\"ME\">ME</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"form.get('department').invalid && form.get('department').touched\">\n                        This field is required!</mat-error>\n                </mat-form-field>\n            </div>\n\n            <div style=\"display:flex\">\n                <mat-form-field style=\"margin-right:4%;width:25%\">\n                    <mat-label>Joining Year</mat-label>\n                    <mat-select formControlName=\"joining_year\">\n                        <mat-option [value]=\"2016\">2016</mat-option>\n                        <mat-option [value]=\"2017\">2017</mat-option>\n                        <mat-option [value]=\"2018\">2018</mat-option>\n                        <mat-option [value]=\"2019\">2019</mat-option>\n                        <mat-option [value]=\"2020\">2020</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"form.get('joining_year').invalid && form.get('joining_year').touched\">\n                        This field is required!</mat-error>\n                </mat-form-field>\n\n\n                <mat-form-field style=\"width: 30%;\">\n                    <mat-label>Expected Year Of Graduation</mat-label>\n                    <mat-select formControlName=\"passing_year\">\n                        <mat-option [value]=\"2020\">2020</mat-option>\n                        <mat-option [value]=\"2021\">2021</mat-option>\n                        <mat-option [value]=\"2022\">2022</mat-option>\n                        <mat-option [value]=\"2023\">2023</mat-option>\n                        <mat-option [value]=\"2024\">2024</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"form.get('passing_year').invalid && form.get('passing_year').touched\">\n                        This field is required!</mat-error>\n                </mat-form-field>\n            </div>\n\n\n            <mat-form-field>\n                <textarea matInput placeholder=\"Address\" formControlName=\"address\" type=\"text\" rows=\"2\"></textarea>\n                <mat-error *ngIf=\"form.get('address').invalid && form.get('address').touched\">\n                    This field is required!\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input formControlName=\"phone\" matInput placeholder=\"Contact No.\" type=\"number\">\n                <mat-error *ngIf=\"form.get('phone').invalid && form.get('phone').touched\">\n                    This field is required!\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input formControlName=\"email\" matInput placeholder=\"Email\" type=\"email\">\n                <mat-error *ngIf=\"form.get('email').invalid && form.get('email').touched\">\n                    This field is required!\n                </mat-error>\n            </mat-form-field>\n\n\n\n\n\n\n\n            <mat-card-actions align=\"end\">\n                <button type=\"submit\" [disabled]=\"!form.valid\" mat-raised-button color=\"primary\">Save</button>\n                <button type=\"button\" (click)=\"onClose()\" mat-raised-button color=\"warn\">Cancel</button>\n\n\n\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Student } from '../models/student.model';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { ImageSnippet } from '../models/image.model';\nimport { RestService } from '../services/rest.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { mimType } from './mime-type.validator';\nimport { RoutesService } from '../services/routes.service';\nimport { StateService } from '../services/state.service';\nimport { NotificationService } from '../services/notification.service';\nimport { async } from '@angular/core/testing';\n\ndeclare var previewFile: any;\n\n@Component({\n    selector: 'app-create',\n    templateUrl: './create.component.html',\n    styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n    url: ArrayBuffer;\n    student: Student;\n    studentId = null;\n    imgPreview: string;\n    form: FormGroup;\n    mode = 'Create';\n    selectedFile: ImageSnippet;\n    file: File;\n    dataBlob: Blob;\n    fileChanges = false;\n    constructor(\n        private router: Router,\n        private route: ActivatedRoute,\n        private notifService: NotificationService,\n        public routes: RoutesService,\n        // tslint:disable-next-line: variable-name\n        private _snackBar: MatSnackBar,\n        private state: StateService,\n        // private _location: Location,\n        private rest: RestService) {\n        // tslint:disable-next-line: triple-equals\n        if (this.router.getCurrentNavigation().extras.state != undefined) {\n            this.student = this.router.getCurrentNavigation().extras.state.data;\n        }\n        this.downloadImageStudent();\n        this.form = new FormGroup({\n            _id: new FormControl(null),\n            name: new FormControl(this.student?.name, { validators: [Validators.required] }),\n            department: new FormControl(this.student?.department, { validators: [Validators.required] }),\n            address: new FormControl(this.student?.address, { validators: [Validators.required] }),\n            joining_year: new FormControl(this.student?.joining_year, { validators: [Validators.required] }),\n            year: new FormControl(this.student?.year, { validators: [Validators.required] }),\n            passing_year: new FormControl(this.student?.passing_year, { validators: [Validators.required] }),\n            email: new FormControl(this.student?.email, { validators: [Validators.required] }),\n            phone: new FormControl(this.student?.phone, { validators: [Validators.required] }),\n            image: new FormControl(this.dataBlob, {\n                asyncValidators: [mimType]\n            })\n            // only accept images\n        });\n        console.log(this.form);\n        console.log(this.student);\n    }\n\n    ngOnInit(): void {\n    }\n\n    async downloadImageStudent() {\n        if (this.student) { \n            const resp = await this.rest.downloadImage(this.student.image);\n            this.dataBlob = resp;\n            console.log(this.dataBlob);\n            this.form.patchValue({ image: this.dataBlob });\n            this.form.get('image').updateValueAndValidity();\n            this.imgPreview = `${this.rest.baseUrl}images/${this.student.image}`;\n        }\n    }\n\n    onImagePicked($event: Event) {\n        this.file = ($event.target as HTMLInputElement).files[0];\n        this.form.patchValue({ image: this.file }); // for single control\n        this.form.get('image').updateValueAndValidity();\n        const reader = new FileReader();\n        reader.onload = () => {\n            this.imgPreview = reader.result as string;\n        };\n        this.fileChanges = true;\n        reader.readAsDataURL(this.file);\n    }\n\n    async onSubmit() {\n        // tslint:disable-next-line: triple-equals\n        if (this.routes.route == '/newStudent') {\n            const value = this.form.value;\n            console.log(value);\n            const { name, department, address, joining_year, year, passing_year, email, phone } = value;\n            const student: Student = {\n                name,\n                department,\n                address,\n                joining_year: parseInt(joining_year, 10),\n                year: parseInt(year, 10),\n                passing_year: parseInt(passing_year, 10),\n                email,\n                phone,\n            };\n            console.log(student);\n            const message = `Adding new Student: ${name}`;\n            const action = 'Undo';\n            let undo = false;\n            const ref = this._snackBar.open(message, action, {\n                duration: 2000,\n            });\n            this.router.navigate(['/list']);\n            ref.onAction().subscribe(() => undo = true);\n            ref.afterDismissed().subscribe(async () => {\n                if (!undo) {\n                    this.notifService.addNotifs(message);\n                    const resp = await this.rest.addStudent(student, this.file);\n                    if (resp.status) {\n                        // alert(`New student ${name} added`);\n                        this.notifService.addNotifs(`New student ${name} added`);\n                    }\n                    else {\n                        // alert(`New student ${name} not added`);\n                        this.notifService.addNotifs(`New student ${name} not added`);\n                    }\n                }\n                else {\n                    // alert('New student was not created');\n                    this.notifService.addNotifs('New student was not created');\n                }\n                this.state.updateList();\n            });\n        }\n        else if (this.routes.route === '/editStudent') {\n            const value = this.form.value;\n            const { name, department, address, joining_year, year, passing_year, email, phone } = value;\n            const student: Student = {\n                _id: this.student._id,\n                name,\n                department,\n                address,\n                joining_year: parseInt(joining_year, 10),\n                year: parseInt(year, 10),\n                passing_year: parseInt(passing_year, 10),\n                email,\n                phone,\n            };\n            const message = `Updating student: ${name}`;\n            const action = 'Undo';\n            let undo = false;\n            const ref = this._snackBar.open(message, action, {\n                duration: 2000,\n            });\n            this.router.navigate(['/list']);\n            ref.onAction().subscribe(() => undo = true);\n            ref.afterDismissed().subscribe(async () => {\n                // console.log(undo);\n                if (!undo) {\n                    this.notifService.addNotifs(message);\n                    const resp = await this.rest.updateStudent(student, (this.fileChanges) ? this.file : null);\n                    if (resp.status) {\n                        alert(`Student ${name} updated`);\n                        this.notifService.addNotifs(`Student ${name} updated`);\n                    }\n                    else {\n                        alert(`Student ${name} not updated`);\n                        this.notifService.addNotifs(`Student ${name} updated`);\n                    }\n                }\n                else {\n                    alert('Updation cancelled');\n                }\n                this.state.updateList();\n            });\n\n            // this.router.navigate(['/list']);\n        }\n\n\n        // this.router.navigate(['/list']);\n    }\n\n    onClose() {\n        window.history.back();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Notification } from '../models/notification.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  notifs: Notification[] = [];\n  count = 0;\n  notifsObserver = new Subject<Notification[]>();\n  notifsObserver$ = this.notifsObserver.asObservable();\n  notifsCountObserver = new Subject<number>();\n  notifsCountObserver$ = this.notifsCountObserver.asObservable();\n  constructor() { }\n\n  getAllNotifs() {\n    return this.notifs;\n  }\n\n  addNotifs(message: string) {\n    const notif: Notification = {\n      message,\n      date: new Date()\n    };\n    this.notifs = [notif].concat(this.notifs);\n    this.notifsObserver.next(this.notifs);\n    this.count += 1;\n    this.notifsCountObserver.next(this.count);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Student } from '../models/student.model';\nimport { RestService } from '../services/rest.service';\nimport { Chart } from 'node_modules/chart.js';\nimport { async } from '@angular/core/testing';\nimport { Router } from '@angular/router';\nimport { state } from '@angular/animations';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  students: Student[];\n  toggle = true;\n  years = [1, 2, 3, 4];\n  yearsData = [];\n  streams = ['IT', 'CSE', 'ECE', 'EE', 'ME'];\n  streamsData = [];\n  totalStudents = 0;\n  chart1: any;\n  chart2: any;\n  constructor(private rest: RestService, private router: Router) {\n    this.fetchData();\n  }\n\n  // students:Student[];\n  // buttonClickd=false;\n\n  async ngOnInit() {\n  }\n\n\n\n  async fetchData() {\n    const resp = await this.rest.getAllStudents();\n    this.students = resp.data;\n    this.totalStudents = this.students.length;\n    this.streams.forEach(async (stream) => {\n      const res = await this.rest.getStudents({ department: stream });\n      this.streamsData.push(res.data.length);\n    });\n    this.years.forEach(async (year) => {\n      const res = await this.rest.getStudents({ year });\n      this.yearsData.push(res.data.length);\n    });\n    console.log(this.streamsData);\n    console.log(this.yearsData);\n    this.chart1 = new Chart('myChart', {\n      type: 'bar',\n      data: {\n        labels: this.streams,\n        datasets: [{\n          data: this.streamsData,\n\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 206, 86, 0.2)',\n            'rgba(75, 192, 192, 0.2)',\n            'rgba(153, 102, 255, 0.2)',\n\n          ],\n          borderColor: [\n            'rgba(255, 99, 132, 1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n            'rgba(153, 102, 255, 1)',\n\n          ],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          yAxes: [{\n            ticks: {\n              min: 0,\n              max: 50\n            }\n          }]\n        }\n      }\n    });\n\n    this.chart2 = new Chart('myPChart', {\n      type: 'pie',\n      data: {\n        labels: ['1', '2', '3', '4'],\n        datasets: [{\n          backgroundColor: ['#3e95cd', '#8e5ea2', '#3cba9f', '#e8c3b9'],\n          data: this.yearsData\n        }]\n      },\n      options: {\n\n        legend: {\n          position: 'right',\n        }\n      }\n    });\n    console.log(this.chart1.data.datasets[0]);\n    console.log(this.chart2.data.datasets[0]);\n  }\n\n\n  async onClick(num: number) {\n    // const resp = await this.rest.getStudents({ year:num});\n    this.router.navigate(['list'], { state: { filterYear: num } });\n\n  }\n\n  async onStream(s: string) {\n    // const resp = await this.rest.getStudents({ department:s });\n    console.log(s);\n    this.router.navigate(['list'], { state: { filterDept: s } });\n  }\n\n}\n","<div class=\"full\">\n  <mat-card class=\"graph-card\">\n  <div class=\"full-grid\">\n\n    <div class=\"center-div\">\n      <div style=\"text-align: center;\">\n        <p style=\"color: grey;margin-bottom: 20px;\">Division of Students wrt Year</p>\n        <div id=\"chart\">\n          <canvas id=\"myPChart\"></canvas>\n        </div>\n      </div>\n    </div>\n\n\n    <div class=\"center-div\">\n      <div style=\"text-align: center;padding:5px\">\n        <p style=\"color: grey;margin-bottom: 20px;\">Division of Students wrt Branch</p>\n        <div id=\"chart\">\n          <canvas id=\"myChart\"></canvas>\n        </div>\n      </div>\n    </div>\n\n  </div>\n  <div class=\"total\" [routerLink]=\"['/list']\">\n    <mat-card class=\"card1\">\n      <mat-card-content>\n        <div style=\"text-align: center;\">\n          <p class=\"mat-h4\">Total Students</p>\n          <br>\n          <p class=\"mat-display-4\">{{totalStudents}}</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</mat-card>\n<div style=\"display: flex;justify-content: space-evenly;\">\n  <p style=\"width:100%;text-align:center;text-decoration:underline;color:grey;\" class=\"mat-h2 heading\">\n    Division of Students by Year\n  </p>\n  <p style=\"width:100%;text-align:center;text-decoration:underline;color:grey;\" class=\"mat-h2 heading\">\n    Division of Students by Branch\n  </p>\n</div>\n\n\n<div class=\"grid-col\">\n\n\n  <mat-card class=\"grid-col cards\">\n\n    <mat-card class=\"card\"   (click)=\"onClick(1)\"  style=\"margin-bottom: 10px;\">\n      <mat-card-content class=\"center-div\">\n        <div>\n          <p class=\"mat-h4\">1st Year</p>\n          <p class=\"mat-display-3\" style=\"text-align: center;\">{{yearsData[0]}}</p>\n        </div>\n      </mat-card-content>\n      \n    </mat-card>\n\n\n    <mat-card class=\"card\"  (click)=\"onClick(2)\" style=\"margin-bottom: 10px;\">\n      <mat-card-content class=\"center-div\">\n        <div>\n          <p class=\"mat-h4\">2nd Year</p>\n          <p class=\"mat-display-3\" style=\"text-align: center;\">{{yearsData[1]}}</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n\n\n    <mat-card class=\"card\"  (click)=\"onClick(3)\" >\n      <mat-card-content class=\"center-div\">\n        <div>\n          <p class=\"mat-h4\">3rd Year</p>\n          <p class=\"mat-display-3\" style=\"text-align: center;\">{{yearsData[2]}}</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n\n\n    <mat-card class=\"card\"  (click)=\"onClick(4)\" >\n      <mat-card-content class=\"center-div\">\n        <div>\n          <p class=\"mat-h4\">4th Year</p>\n          <p class=\"mat-display-3\" style=\"text-align: center;\">{{yearsData[3]}}</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n\n\n  </mat-card>\n\n\n  <mat-card class=\"three-grid\">\n\n    <mat-card class=\"card\" [routerLink]=\"['/list']\" style=\"margin-bottom: 15px;\"  (click)=\"onStream('IT')\">\n      <mat-card-content class=\"center-div\">\n        <div>\n          <p class=\"mat-h4\">IT</p>\n          <p class=\"mat-display-2\" style=\"text-align: center;\">{{streamsData[0]}}</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n\n\n    <mat-card class=\"card\" [routerLink]=\"['/list']\" (click)=\"onStream('CSE')\" style=\"margin-bottom: 15px;\">\n      <mat-card-content class=\"center-div\">\n        <div>\n          <p class=\"mat-h4\">CSE</p>\n          <p class=\"mat-display-2\" style=\"text-align: center;\">{{streamsData[1]}}</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n\n\n    <mat-card class=\"card\" [routerLink]=\"['/list']\" (click)=\"onStream('ECE')\" style=\"margin-bottom: 10px;\">\n      <mat-card-content class=\"center-div\">\n        <div>\n          <p class=\"mat-h4\">ECE</p>\n          <p class=\"mat-display-2\" style=\"text-align: center;\">{{streamsData[2]}}</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n\n\n    <mat-card class=\"card\" [routerLink]=\"['/list']\" (click)=\"onStream('EE')\">\n      <mat-card-content class=\"center-div\">\n        <div>\n          <p class=\"mat-h4\">EE</p>\n          <p class=\"mat-display-2\" style=\"text-align: center;\">{{streamsData[3]}}</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n\n\n    <mat-card class=\"card\" [routerLink]=\"['/list']\" (click)=\"onStream('ME')\">\n      <mat-card-content class=\"center-div\">\n        <div>\n          <p class=\"mat-h4\">ME</p>\n          <p class=\"mat-display-2\" style=\"text-align: center;\">{{streamsData[4]}}</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n\n\n  </mat-card>\n</div>\n</div>","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators'\nimport { throwError } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ErrorComponent } from './error/error.component';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n    constructor(private dialog: MatDialog) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\n        return next.handle(req).pipe(\n            catchError(\n                (error: HttpErrorResponse) => {\n                    //console.log(error)\n                    let msg = \"Unknown Error Occured\"\n                    if (error.error.message) {\n                        msg = error.error.message\n                        console.log(error.error.message)\n\n                    }\n                    this.dialog.open(ErrorComponent, {\n                        data: { message: msg },\n                        width: '200px'\n\n                    });\n                    return throwError(error)\n                }\n            )\n        )\n            ;\n    }\n\n}","import { Component } from '@angular/core';\nimport { RoutesService } from './services/routes.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n  constructor(public route: RoutesService){}\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n","import { AbstractControl } from '@angular/forms';\nimport { Observable, Observer } from 'rxjs';\n//async validator\n\nexport const mimType = (control: AbstractControl):\n    Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\n    const file = control.value as File\n    const fileReader = new FileReader();\n    const obs = Observable.create(\n        (observer: Observer<{ [key: string]: any }>) => {\n            //same like onload()\n            fileReader.addEventListener(\"loadend\", () => {\n\n                //mimetype validation\n                const array = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\n                //checks if input is onlu images\n                let header = \"\";\n                let isValid=false;\n                for (let i = 0; i < array.length; i++) {\n                    header += array[i].toString(16);\n                    //to hexadecimal\n                }\n                switch (header){\n                    case \"89504e47\":\n                        isValid=true;\n                        break;\n                    case \"ffd8ffe0\":\n                    case \"ffd8ffe1\":\n                    case \"ffd8ffe2\":\n                    case \"ffd8ffe3\":\n                    case \"ffd8ffe8\":\n                        isValid=true;\n                        break;\n                    default:\n                        isValid=false;\n                        break;\n\n                }\n\n                if(isValid){\n                    observer.next(null)\n                }\n                else{\n                    observer.next({invalidtype:true})\n                }\n                observer.complete();\n\n            });\n            fileReader.readAsArrayBuffer(file);\n\n        }\n    );\n    return obs;\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MaterialModule } from './material/material.module';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { RouterModule, Router, RouterEvent, NavigationEnd } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ListComponent } from './list/list.component';\nimport { CreateComponent } from './create/create.component';\nimport { StudentDetailComponent, ActionComponent } from './student-detail/student-detail.component';\nimport { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RoutesService } from './services/routes.service';\nimport { MaterialElevationDirective } from './material-elevation.directive';\nimport { LoginComponent} from './login/login.component';\nimport { AuthService } from './services/auth.service';\nimport { RestService } from './services/rest.service';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { UserComponent } from './user/user.component';\nimport {ErrorInterceptor} from './error-interceptor';\nimport { RegisterComponent } from './register/register.component';\nimport { ErrorComponent } from './error/error.component';\nimport { StateService } from './services/state.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    DashboardComponent,\n    ListComponent,\n    ActionComponent,\n    CreateComponent,\n    StudentDetailComponent,\n    ErrorComponent,\n    MaterialElevationDirective,\n    LoginComponent,\n    UserComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule, MaterialModule,\n    BrowserAnimationsModule, RouterModule, FormsModule, ReactiveFormsModule,\n    HttpClientModule, FlexLayoutModule\n  ],\n  providers: [AuthService, RestService, RoutesService,StateService,\n    {provide:HTTP_INTERCEPTORS,useClass: ErrorInterceptor,multi:true}\n  ],\n  entryComponents: [StudentDetailComponent,ErrorComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(\n    private readonly router: Router,\n    private routes: RoutesService\n  ) {\n    router.events\n      .subscribe((event: RouterEvent) => {\n        if (event instanceof NavigationEnd) {\n          this.routes.setRoute(event.url);\n        }\n      });\n  }\n}\n","import { Directive, ElementRef, HostListener, Input, Renderer2, OnChanges, SimpleChanges } from '@angular/core';\n\n@Directive({\n  selector: '[appMaterialElevation]'\n})\nexport class MaterialElevationDirective implements OnChanges {\n\n  @Input()\n  defaultElevation = 2;\n\n  @Input()\n  raisedElevation = 6;\n\n  constructor(\n    private element: ElementRef,\n    private renderer: Renderer2\n  ) {\n    this.setElevation(this.defaultElevation);\n  }\n\n  // tslint:disable-next-line: variable-name\n  ngOnChanges( _changes: SimpleChanges) {\n    this.setElevation(this.defaultElevation);\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter() {\n    this.setElevation(this.raisedElevation);\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave() {\n    this.setElevation(this.defaultElevation);\n  }\n\n  setElevation(amount: number) {\n    // remove all elevation classes\n    const classesToRemove = Array.from(( this.element.nativeElement as HTMLElement).classList).filter(c => c.startsWith('mat-elevation-z'));\n    classesToRemove.forEach((c) => {\n      this.renderer.removeClass(this.element.nativeElement, c);\n    });\n\n    // add the given elevation class\n    const newClass = `mat-elevation-z${amount}`;\n    this.renderer.addClass(this.element.nativeElement, newClass);\n  }\n}\n","<mat-sidenav-container class=\"header\">\n    <mat-sidenav #sidenav mode=\"over\">\n        <mat-list>\n            <div class=\"details\">\n                <p *ngIf=\"!isLogged\">You are not logged in!<br>\n                    Login to see details!</p>\n                <mat-list-item *ngIf=\"name!==''\">\n                    <img matListAvatar style=\"display: block;\" src=\"https://wprdea.org/image/img_avatar.png\"\n                        alt=\"img of a man\">\n                    <div mat-line class=\"mat-title\">{{name}}</div>\n                    <div mat-line>{{email}}</div>\n\n\n                </mat-list-item>\n                <mat-list-item *ngIf=\"name!==''\">\n                    <button class=\"manage\" mat-button isRoundButton (click)=\"manage()\">\n                        Manage Your Profile\n                    </button>\n                </mat-list-item>\n            </div>\n        </mat-list>\n        <mat-divider></mat-divider>\n\n        <mat-nav-list *ngIf=\"isLogged\">\n            <a mat-list-item [routerLink]=\"['/dashboard']\" routerLinkActive=\"active\">\n                <mat-icon matListIcon>dashboard</mat-icon>\n                <div mat-line>Dashboard</div>\n            </a>\n            <a mat-list-item [routerLink]=\"['/list']\" routerLinkActive=\"active\">\n                <mat-icon matListIcon>group</mat-icon>\n                <div mat-line>Students</div>\n            </a>\n            <a mat-list-item [routerLink]=\"['/settings']\" routerLinkActive=\"active\">\n                <mat-icon matListIcon>settings</mat-icon>\n                <div mat-line>Settings</div>\n            </a>\n            <a mat-list-item [routerLink]=\"['/help']\" routerLinkActive=\"active\">\n                <mat-icon matListIcon>help</mat-icon>\n                <div mat-line>Help</div>\n            </a>\n        </mat-nav-list>\n\n    </mat-sidenav>\n    <mat-sidenav-content style=\"padding: 0px;\">\n\n        <mat-toolbar color=\"primary\" class=\"mat-elevation-z6 app-toolbar\"\n            *ngIf=\"routes.route!=='/login' && routes.route!=='/register'\">\n            <button mat-icon-button *ngIf=\"routes.route!='/editStudent' && routes.route!='/newStudent'\"\n                class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n                <mat-icon (click)=\"sidenav.toggle()\">menu</mat-icon>\n            </button>\n\n            <button mat-icon-button *ngIf=\"routes.route=='/editStudent' || routes.route=='/newStudent'\"\n                class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n                <mat-icon (click)=\"goBack()\">arrow_back_ios</mat-icon>\n            </button>\n            <div style=\"margin-left: 5px;\">\n                <span *ngIf=\"routes.route=='/login'\">Login</span>\n                <span *ngIf=\"routes.route=='/register'\">Register</span>\n                <span *ngIf=\"routes.route=='/editStudent'\">Edit Student</span>\n                <span *ngIf=\"routes.route=='/dashboard'\">Dashboard</span>\n                <span *ngIf=\"routes.route=='/user'\">User Profile</span>\n                <span *ngIf=\"routes.route=='/list'\">Students</span>\n                <span *ngIf=\"routes.route=='/settings'\">Settings</span>\n                <span *ngIf=\"routes.route=='/help'\">Help</span>\n                <span *ngIf=\"routes.route=='/newStudent'\">Add Student</span>\n            </div>\n\n            <form *ngIf=\"routes.route=='/list'\" class=\"example\" style=\"margin:0 auto;max-width:350px;\">\n                <input type=\"text\" placeholder=\"Search\" name=\"search\" [(ngModel)]=\"searchText\" (change)=\"search()\" >\n                <button type=\"submit\"><i class=\"fa fa-search\"></i></button>\n            </form>\n\n\n\n            <button mat-icon-button style=\"float: right;position:absolute;right:80px\" class=\"example-icon\"\n                [matMenuTriggerFor]=\"aboveMenu\" aria-label=\"Example icon-button with notification icon\">\n                <mat-icon [matBadge]=\"notifCount\" matBadgeColor=\"warn\">notifications</mat-icon>\n            </button>\n            <mat-menu #aboveMenu=\"matMenu\" xPosition=\"before\">\n                <button mat-menu-item *ngFor=\"let notif of notifs\">\n                    <span>{{notif.message}}</span></button>\n            </mat-menu>\n\n\n            <button style=\"float: right;position:absolute;right:20px\" class=\"example-icon2\" mat-icon-button\n                [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n                <mat-icon>more_vert</mat-icon>\n            </button>\n\n            <mat-menu #menu=\"matMenu\">\n                <button (click)=\"logout()\" mat-menu-item *ngIf=\"name!==''\">\n                    <mat-icon>login</mat-icon>\n                    <span><a>Logout</a></span>\n                </button>\n                <button mat-menu-item *ngIf=\"name===''\">\n                    <mat-icon>login</mat-icon>\n                    <span><a routerLink=\"/login\" (click)=\"onLogin()\">Login</a></span>\n                </button>\n                <button mat-menu-item *ngIf=\"name===''\">\n                    <mat-icon>login</mat-icon>\n                    <span><a routerLink=\"/register\" (click)=\"onRegister()\">Register</a></span>\n                </button>\n            </mat-menu>\n\n        </mat-toolbar>\n\n\n        <app-footer></app-footer>\n\n\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\nimport { MaterialModule } from '../material/material.module';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RoutesService } from '../services/routes.service';\nimport { AuthService } from '../services/auth.service';\nimport { NgForm } from '@angular/forms';\nimport { Notification } from '../models/notification.model';\nimport { NotificationService } from '../services/notification.service';\nimport { state } from '@angular/animations';\nimport { HttpClient } from '@angular/common/http';\nimport { Student } from '../models/student.model';\nimport { RestService } from '../services/rest.service';\nimport { StateService } from '../services/state.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  href: string;\n  isRoundButton = true;\n  name = '';\n  email = '';\n  isLogged = false;\n  notifs: Notification[];\n  searchText = '';\n  notifCount: number;\n  students: Student[] = [];\n\n\n  constructor(\n    private route: ActivatedRoute,\n    public router: Router,\n    private http: HttpClient,\n    public routes: RoutesService,\n    private stateServ: StateService,\n    public rest: RestService,\n    public auth: AuthService,\n    private notifService: NotificationService) {\n    this.auth.loginObserver$.subscribe((login) => {\n      console.log('login event');\n      if (login) {\n        this.name = login.user.name;\n        this.email = login.user.email;\n        this.isLogged = true;\n      }\n      else {\n        this.name = '';\n        this.email = '';\n        this.isLogged = false;\n      }\n    });\n    this.auth.loadLogin();\n    this.notifService.notifsObserver$.subscribe(notifs => this.notifs = notifs);\n    this.notifService.notifsCountObserver$.subscribe(count => this.notifCount = count);\n    // this.fetchNotif();\n  }\n\n  ngOnInit(): void {\n\n\n  }\n  fetchNotif() {\n    this.notifs = this.notifService.getAllNotifs();\n    this.notifCount = this.notifs.length;\n  }\n  isActive() {\n    this.href = this.router.url;\n  }\n\n  onLogin() {\n\n    this.router.navigate(['/']);\n\n  }\n  onRegister() {\n    this.router.navigate(['/']);\n  }\n  logout() {\n    this.auth.logout();\n    this.notifCount = 0;\n    this.router.navigate(['login']);\n  }\n\n  goBack() {\n    window.history.back();\n  }\n\n  async search() {\n    console.log(this.searchText);\n    const resp = await this.rest.getStudentonSearch(this.searchText);\n    console.log(resp.data.length);\n    this.stateServ.search(resp.data);\n  }\n\n  manage() {\n    this.router.navigate(['/user'], { state: { username: this.name, useremail: this.email } });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RoutesService } from '../services/routes.service';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\nnewMode = false;\n  constructor(public routes: RoutesService) { }\n\n  ngOnInit(): void {\n  }\n onAdd(){\nthis.newMode  =  true;\n\n }\n}\n","<div class=\"button-container\" *ngIf=\"routes.route!=='/newStudent' && routes.route!=='/register' && routes.route!=='/editStudent' && routes.route!=='/login' && routes.route!=='/dashboard'\">\n    <button mat-fab color=\"accent\" aria-label=\"Example icon button with a more icon\"><a  style=\"text-decoration: none;color: white;\" routerLink=\"/newStudent\">\n      <mat-icon>person_add_alt_1</mat-icon></a>\n    </button>\n  </div>\n\n  \n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox'\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport {MatBadgeModule} from '@angular/material/badge';\n\nconst materialComponents = [\n  MatButtonModule,\n  MatSnackBarModule,\n  MatCheckboxModule,\n  MatTooltipModule,\n  MatRippleModule,\n  MatBadgeModule,\n  MatButtonToggleModule,\n  MatIconModule,\n  MatDialogModule,\n  MatToolbarModule,\n  MatSidenavModule,\n  MatGridListModule,\n  MatListModule,\n  MatMenuModule,\n  MatSelectModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatCardModule,\n  MatRadioModule\n];\n@NgModule({\n\n  imports: [...materialComponents],\n  exports: [...materialComponents],\n  providers: [\n    {\n      provide: MatDialogRef,\n      useValue: {}\n    }\n  ],\n})\nexport class MaterialModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User, Login } from '../models/auth.model';\nimport { ServerResponse } from '../models/server-response.model';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private baseUrl = '';\n  login: Login;\n  loginObserver = new Subject<Login>();\n  loginObserver$ = this.loginObserver.asObservable();\n  constructor(private http: HttpClient) {\n    this.loadLogin();\n  }\n\n  loadLogin() {\n    if (localStorage.getItem('LOGIN')) {\n      this.login = JSON.parse(localStorage.getItem('LOGIN'));\n      console.log(this.login);\n      this.loginObserver.next(this.login);\n    }\n  }\n\n  public registerUser(user: User): Promise<ServerResponse<User>> {\n    const url = `${this.baseUrl}auth/register`;\n    return this.http.post<ServerResponse<User>>(url, user).toPromise();\n  }\n\n  public loginUser(email: string, password: string): Promise<ServerResponse<Login>> {\n    const url = `${this.baseUrl}auth/login`;\n    return this.http.post<ServerResponse<Login>>(url, { email, password }).toPromise();\n  }\n\n  public storeLogin(log: Login) {\n    this.login = log;\n    localStorage.setItem('LOGIN', JSON.stringify(this.login));\n    this.loginObserver.next(this.login);\n  }\n\n  public getLogin(): Login {\n    return this.login;\n  }\n\n  public logout() {\n    this.login = null;\n    this.loginObserver.next(null);\n    localStorage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Student } from '../models/student.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n  private listUpdates = new Subject<string>();\n  private searchUpdates = new Subject<Student[]>();\n  public listUpdates$ = this.listUpdates.asObservable();\n  public searchUpdates$ = this.searchUpdates.asObservable();\n  constructor() { }\n\n  public updateList() {\n    console.log('update');\n    this.listUpdates.next('update');\n  }\n\n  public search(results: Student[]) {\n    this.searchUpdates.next(results);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Student } from '../models/student.model';\nimport { ServerResponse } from '../models/server-response.model';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestService {\n  baseUrl = '';\n  constructor(private http: HttpClient) { }\n  private students: Student[] = [];\n  private studentsUpdated = new Subject<Student[]>();\n\n  formatQuery(paramMap): string {\n    const keys = Object.keys(paramMap);\n    if (keys.length === 0) {\n      return '';\n    }\n\n    let qparam = '';\n    const key0 = keys[0];\n    qparam = '?' + key0 + '=' + paramMap[key0];\n\n    keys.forEach(element => {\n      if (element === key0) {\n        return;\n      }\n      qparam += '&' + element + '=' + paramMap[element];\n    });\n    return qparam;\n  }\n\n  public getStudentonSearch(query: string){\n    const url = `${this.baseUrl}students/search`;\n    return this.http.post<ServerResponse<Student[]>>(url, { query }).toPromise();\n\n  }\n  public getAllStudents(): Promise<ServerResponse<Student[]>> {\n    const url = `${this.baseUrl}students`;\n    return this.http.get<ServerResponse<Student[]>>(url).toPromise();\n  }\n\n  public getStudents(queries): Promise<ServerResponse<Student[]>> {\n    const url = `${this.baseUrl}students${this.formatQuery(queries)}`;\n    return this.http.get<ServerResponse<Student[]>>(url).toPromise();\n  }\n  public addStudent(student: Student, file: File): Promise<ServerResponse<Student>> {\n    const postData = new FormData();\n    Object.keys(student).forEach((key) => {\n      postData.append(key, student[key]);\n    });\n    postData.append('student-image', file, file.name);\n    console.log(postData);\n\n    const url = `${this.baseUrl}students/create`;\n    return this.http.post<ServerResponse<Student>>(url, postData).toPromise();\n  }\n\n  public getStudentById(id: string): Promise<ServerResponse<Student>> {\n    const url = `${this.baseUrl}students/${id}`;\n    return this.http.get<ServerResponse<Student>>(url).toPromise();\n  }\n\n  public downloadImage(imageId: string): Promise<Blob> {\n    const url = `${this.baseUrl}images/${imageId}`;\n    return this.http.get(url, { responseType: 'blob' }).toPromise();\n  }\n  public deleteStudent(id: string) {\n\n    const url = `${this.baseUrl}students/${id}`;\n    return this.http.delete<{ message: string, status: boolean }>(url).toPromise();\n  }\n\n  public updateStudent(student: Student, file?: File) {\n    console.log(student);\n    const postData = new FormData();\n    Object.keys(student).forEach((key) => {\n      postData.append(key, student[key]);\n    });\n    if (file) {\n      console.log(file);\n      postData.append('student-image', file, file.name);\n    }\n    console.log(postData);\n    const url = `${this.baseUrl}students/${student._id}`;\n    return this.http.put<ServerResponse<Student>>(url, postData).toPromise();\n  }\n}\n","<!--For list of students-->\n<!-- <form class=\"example\" #searchText=\"ngForm\" (submit)=\"search(searchText)\" style=\"margin:0 auto;max-width:350px;\">\n  <input type=\"text\" placeholder=\"Search\" name=\"search\" ngModel>\n  <button type=\"submit\"><i class=\"fa fa-search\"></i></button>\n</form> -->\n<div class=\"input\" >\n  <mat-form-field style=\"margin: 10px;\">\n    <mat-label>Year</mat-label>\n    <mat-select [(ngModel)]=\"filterYear\">\n      <mat-option [value]=\"1\">1</mat-option>\n      <mat-option [value]=\"2\">2</mat-option>\n      <mat-option [value]=\"3\">3</mat-option>\n      <mat-option [value]=\"4\">4</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field style=\"margin: 10px;\">\n    <mat-label>Department</mat-label>\n    <mat-select [(ngModel)]=\"filterDept\">\n      <mat-option value=\"IT\">IT</mat-option>\n      <mat-option value=\"CSE\">CSE</mat-option>\n      <mat-option value=\"ECE\">ECE</mat-option>\n      <mat-option value=\"EE\">EE</mat-option>\n      <mat-option value=\"ME\">ME</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <button mat-button (click)=\"filter()\">Filter</button>\n  <button mat-button (click)=\"clearFilter()\">Clear</button>\n</div>\n\n  <span class=\"icon\" style=\"z-index: 5;\">\n    <button *ngIf=\"!listView\" (click)=\"listView=!listView\">\n      <mat-icon  fontSet=\"material-icons-outlined\">view_list</mat-icon>\n    </button>\n    <button *ngIf=\"listView\" (click)=\"listView=!listView\">\n      <mat-icon  fontSet=\"material-icons-outlined\">view_module</mat-icon>\n    </button>\n  </span>\n\n<div class=\"content\" *ngIf=\"listView\">\n  <mat-nav-list *ngFor=\"let student of students;let i=index\" class=\"list\" (click)=\"openDialog(student,i)\">\n    <mat-list-item matRipple>\n      <img matListAvatar [src]=\"'http://localhost:3000/images/'+student.image\" alt=\"img of {{student.name}}\">\n      <div mat-line style=\"margin-left: 7px;\">{{student.name}}</div>\n      <div mat-line style=\"margin-left: 7px;\"> {{student.department | uppercase}} </div>\n      <div mat-line style=\"margin-left: 7px;\"> {{student.passing_year +\" Batch\" }}</div>\n    </mat-list-item>\n    <mat-divider [inset]=\"true\"></mat-divider> \n\n  </mat-nav-list>\n</div>\n\n<div fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\" \n class=\"contentGrid\" *ngIf=\"!listView\" style=\"display:block;width:90%;\">\n    <div fxFlex=\"25%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\" *ngFor=\"let student of students;let i=index\" style=\"padding: 10px;\">\n      <mat-card matRipple class=\"card\" (click)=\"openDialog(student,i)\">\n        <mat-card-content>\n          <mat-list>\n            <mat-list-item>\n              <img matListAvatar [src]=\"'http://localhost:3000/images/'+student.image\" alt=\"img of {{student.name}}\">\n              <div mat-line><strong>{{student.name}}</strong></div>\n              <div mat-line> {{student.department | uppercase}} </div>\n              <!-- <div mat-line>{{student.year}}</div> -->\n              <div mat-line> {{student.passing_year +\" Batch\" }}</div>\n            </mat-list-item>\n          </mat-list>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Student } from '../models/student.model';\nimport { RestService } from '../services/rest.service';\nimport { StudentDetailComponent } from '../student-detail/student-detail.component';\n// import { timeStamp } from 'console';\nimport { ServerResponse } from '../models/server-response.model';\nimport { StateService } from '../services/state.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  filterDept: string = history.state.filterDept;\n  rowHeight;\n\n\n  filterYear: number = history.state.filterYear;\n  students: Student[] = history.state.students;\n  listView = true;\n\n  constructor(\n    public dialog: MatDialog,\n    private rest: RestService,\n    private state: StateService) {\n\n    this.fetchData();\n    this.state.listUpdates$.subscribe((message) => {\n      if (message === 'update') {\n        this.fetchData();\n      }\n    });\n    this.state.searchUpdates$.subscribe(results => this.students = results);\n  }\n\n  ngOnInit(): void {\n    this.filter();\n  }\n  async filter() {\n    let resp: ServerResponse<Student[]>;\n    if (this.filterYear && this.filterDept) {\n      resp = await this.rest.getStudents({ year: this.filterYear, department: this.filterDept });\n    }\n    else if (this.filterYear) {\n      resp = await this.rest.getStudents({ year: this.filterYear });\n    }\n    else if (this.filterDept) {\n      resp = await this.rest.getStudents({ department: this.filterDept });\n    }\n    this.students = resp.data;\n  }\n\n  async clearFilter() {\n    this.filterDept = '';\n    this.filterYear = null;\n    this.fetchData();\n  }\n\n  async fetchData() {\n\n    const resp = await this.rest.getAllStudents();\n\n    this.students = resp.data;\n    this.students.sort((a, b) => a.name.localeCompare(b.name));\n\n  }\n\n  openDialog(student: Student, index: number) {\n    // console.log(index);\n    const dialogRef = this.dialog.open(StudentDetailComponent, {\n      data: {\n        studentData: student,\n        id: index,\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n}\n","import { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListComponent } from './list/list.component';\nimport { HeaderComponent } from './header/header.component';\nimport { CreateComponent } from './create/create.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LoginComponent } from './login/login.component';\nimport { UserComponent } from './user/user.component';\nimport { RegisterComponent } from './register/register.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'user',component:UserComponent},\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'list', component: ListComponent },\n  { path: 'newStudent', component: CreateComponent },\n  { path: 'editStudent', component: CreateComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { RoutesService } from '../services/routes.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { NgForm } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  hide = true;\n  registerUserData = <any>{};\n\n  login = true;\n  register = false;\n  constructor(public route: RoutesService,\n    private auth: AuthService,\n    public router: Router,\n    public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    if (this.auth.getLogin()) {\n      this.router.navigate(['dashboard']);\n    }\n  }\n\n  async loginUser(f: NgForm) {\n    const value = f.value;\n    console.log(value);\n    const { email, password } = value;\n    const resp = await this.auth.loginUser(email, password);\n    console.log(resp);\n    if (resp.status===true) {\n      this.auth.storeLogin(resp.data);\n      this.router.navigate(['dashboard']);\n    }\n    else{\n      alert(\"False\")\n    }\n    \n  }\n\n  tab() {\n    this.login = !this.login;\n  }\n}\n","<div class=\"content\">\n    <div class=\"login\">\n        <mat-card class=\"mat-elevation-z2\">\n            <mat-card-title style=\"text-align: center;margin-top: 20px;\">Login</mat-card-title>\n            <form (ngSubmit)=\"loginUser(f)\" #f=\"ngForm\">\n                <mat-form-field>\n                    <!-- <i class=\"fa fa-user  cust\" aria-hidden=\"true\"></i> -->\n                    <input matInput placeholder=\"Email\" type=\"email\" required name=\"email\" required ngModel\n                        #email=\"ngModel\">\n                    <mat-icon matSuffix style=\"font-size:18px;\">email</mat-icon>\n\n                </mat-form-field>\n                <mat-form-field>\n                    <!-- <i class=\"fa fa-lock  cust\" aria-hidden=\"true\"></i> -->\n                    <input matInput placeholder=\"Password\" [type]=\"hide ? 'password' : 'text'\" required name=\"password\"\n                        required ngModel #password=\"ngModel\">\n                    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                        [attr.aria-pressed]=\"hide\">\n                        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                    </button>\n                </mat-form-field>\n\n                <div class=\"options\">\n                    <mat-checkbox class=\"example-margin\">Remember Me?</mat-checkbox>\n                    <a class=\"forgotPwd\">Forgot your password?</a>\n                </div>\n                <mat-card-actions><button [disabled]=\"!f.valid\" mat-raised-button style=\"margin-top: 10px;\"\n                        color=\"primary\" type=\"submit\">Login</button></mat-card-actions>\n                <mat-card-actions style=\"text-align:center;\"><span>New User?</span>\n                    <button style=\"width:18%;text-align: center;\" mat-button (click)=\"router.navigate(['register'])\"  type=\"button\">\n                        SignUp\n                        </button>\n                </mat-card-actions>\n            </form>\n\n        </mat-card>\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}