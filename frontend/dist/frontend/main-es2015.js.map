{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/environments/environment.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/student-detail/student-detail.component.ts","./src/app/student-detail/student-detail.component.html","./src/app/student-detail/action.component.html","./src/app/services/routes.service.ts","./src/app/create/create.component.ts","./src/app/create/create.component.html","./src/app/services/notification.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/error-interceptor.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/create/mime-type.validator.ts","./src/app/app.module.ts","./src/app/material-elevation.directive.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/material/material.module.ts","./src/app/services/auth.service.ts","./src/app/services/state.service.ts","./src/app/services/rest.service.ts","./src/app/list/list.component.ts","./src/app/list/list.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { RoutesService } from '../services/routes.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  alert:boolean=false;\n  danger=false;\n\n  constructor(public route: RoutesService,\n    private auth: AuthService,\n    public router: Router) { }\n\n  ngOnInit(): void {\n    if (this.auth.getLogin()) {\n      this.router.navigate(['dashboard']);\n    }\n  }\n\n  hide = true;\n  registerUserData =<any>{};\n  match=false;\n\n  register = false;\n  \n async registerUser(f: NgForm) {\n    const value = f.value;\n    console.log(value);\n    const { name, email, password } = value;\n    const resp = await this.auth.registerUser({ name, email, password });\n    console.log(resp);\n    \n    if (resp.status) {\n       //this.tab();\n       this.alert=true;\n       f.resetForm();\n     }\n     else{\n       this.danger=true;\n\n     }\n  }\n\n  onClose(){\n    this.alert=false;\n    this.router.navigate(['login'])\n\n  }\n\n  tab() {\n    this.register = !this.register;\n  }\n}\n  ","<div class=\"content\">\n    <div *ngIf=\"route.route==='/register'\" class=\"register\">\n        <mat-card class=\"mat-elevation-z2\">\n            <mat-card-title style=\"text-align: center;margin-top: 20px;\">Sign Up</mat-card-title>\n\n            <div *ngIf=\"alert\" style=\"width:80%;margin: 0 auto;margin-top:5%;\"\n                class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n                <strong>Success</strong> Data Saved!\n                <button (click)=\"onClose()\" type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                    <span style=\"float: right;\" aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n\n            <div *ngIf=\"danger\" style=\"width:80%;margin: 0 auto;margin-top:5%;\"\n                class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n                <strong>User already exists!</strong>Data not saved!\n                <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                    <span style=\"float: right;\" aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n\n\n            <form (ngSubmit)=\"registerUser(f)\" #f=\"ngForm\">\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Name\" type=\"name\" name=\"name\" required ngModel #name=\"ngModel\">\n                </mat-form-field>\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Email\" type=\"email\" name=\"email\" required ngModel #email=\"ngModel\">\n                    <mat-icon matSuffix style=\"font-size:18px;\">email</mat-icon>\n                </mat-form-field>\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Password\" name=\"password\" [type]=\"hide ? 'password' : 'text'\" ngModel\n                        #password=\"ngModel\" required >\n                    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                        [attr.aria-pressed]=\"hide\">\n                        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                    </button>\n                    <!-- <mat-hint>Password must be valid</mat-hint> -->\n                    <mat-error><div *ngIf=\"password.errors\">Password must be valid</div></mat-error>\n\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput placeholder=\"Confirm your password\" name=\"confirmPassword\"\n                        [type]=\"hide ? 'password' : 'text'\" #confirmPassword=\"ngModel\" ngModel required>\n                    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                        [attr.aria-pressed]=\"hide\">\n                        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                    </button>\n\n                </mat-form-field>\n                \n\n\n                <mat-card-actions style=\"margin-top: 10px;\"><button [disabled]=\"!f.valid && password.value===confirmPassword.value\" mat-raised-button\n                        color=\"primary\" type=\"submit\">Register</button></mat-card-actions>\n                <mat-card-actions style=\"text-align: center;\">\n                    <span> Already have an account?</span>\n                    <button (click)=\"router.navigate(['login'])\" mat-button type=\"button\" style=\"width: 15%;\">\n                        Login\n                    </button></mat-card-actions>\n            </form>\n\n        </mat-card>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  name: string ;\n  email:string;\n  constructor() {}\n\n  ngOnInit(): void {\n    this.name=history.state.username;\n    this.email=history.state.useremail;\n    this.details();\n  }\ndetails(){\nconsole.log(history.state.name,history.state.email)\n}\n}\n","<mat-card class=\"card\">\n    <mat-card-title style=\"text-align: center;margin: 10px;\">User Details</mat-card-title>\n    <mat-card-content>\n        <button mat-icon-button><mat-icon>create</mat-icon></button>\n        <p><label class=\"mat-h3\">User Name</label>\n            <span class=\"mat-h4\" style=\"margin-left: 5px; font-weight:bold;\">{{name}}</span></p>\n            <p><label class=\"mat-h3\">User Email</label>\n                <span class=\"mat-h4\" style=\"margin-left: 10px; font-weight:bold;\">{{email}}</span></p>\n        \n\n    </mat-card-content>\n</mat-card>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, inject, Inject} from '@angular/core'\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog'\n@Component({\ntemplateUrl:'./error.component.html'\n})\n\nexport class ErrorComponent{\n\nconstructor(@Inject(MAT_DIALOG_DATA) public data:{message:string}){}\n\n}","<h3 mat-dialog-title>Error!!</h3>\n<div mat-dialog-content> \n    <p class=\"mat-body-1\">{{data.message}}</p>\n</div>\n<div mat-dialog-actions>\n    <button mat-button mat-dialog-close style=\"border: none;outline: none;\">Okay</button>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialogConfig, MatDialog } from '@angular/material/dialog';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n// import { StudentService } from '../students.service';\n// import { Student } from '../student.model';\nimport { Student } from '../models/student.model';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { RestService } from '../services/rest.service';\nimport { StateService } from '../services/state.service';\nimport { NotificationService } from '../services/notification.service';\nimport { async } from '@angular/core/testing';\n\n\n\n@Component({\n  selector: 'app-student-detail',\n  templateUrl: './student-detail.component.html',\n  styleUrls: ['./student-detail.component.css']\n})\n\nexport class StudentDetailComponent implements OnInit {\n\n  editmode = false;\n  student: Student;\n  id: string;\n\n  constructor(\n    public dialog: MatDialog,\n    private dialogRef: MatDialogRef<StudentDetailComponent>,\n    private route: Router, private router: ActivatedRoute,\n    private rest: RestService, private notifService: NotificationService,\n    // tslint:disable-next-line: variable-name\n    private _snackbar: MatSnackBar,\n    private state: StateService,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n\n    this.student = data.studentData;\n    this.id = data.id;\n\n\n  }\n\n  ngOnInit() {\n    // console.log(this.student, this.id)\n  }\n\n  save() {\n    // console.log(this.descriptFion)\n    console.log('saved');\n\n  }\n\n  onClose() {\n    console.log('closed');\n    this.dialogRef.close();\n  }\n\n  onEdit() {\n    this.editmode = true;\n    /// this.openDialog(\"Edit\");\n    // this.onClose();\n\n  }\n\n  onCopy() {\n    console.log('copied');\n    // this.onClose();\n  }\n\n  async onDelete() {\n    // this.studentService.deleteStudent(this.id);\n    // this.openDialog(\"Delete\");\n    console.log(this.student);\n    const msg = 'Student Deleted';\n    const action = 'Undo';\n    let undo = false;\n    const ref = this._snackbar.open(msg, action, {\n      duration: 2000,\n    });\n    this.notifService.addNotifs('Deleting student');\n    ref.onAction().subscribe(() => undo = true);\n    ref.afterDismissed().subscribe(async () => {\n      if (!undo) {\n        const resp = await (this.rest.deleteStudent(this.student._id));\n        if (resp.status) {\n          // alert('Student deleted');\n          this.notifService.addNotifs('Deleted student');\n        }\n      }\n      else {\n        // alert('Student not deleted');\n        this.notifService.addNotifs('Data Deletion cancelled');\n      }\n      this.state.updateList();\n    });\n    // console.log(this.notifService.getAllNotifs)\n    this.onClose();\n  }\n\n  openDialog(message: string) {\n\n    const dialogRef = this.dialog.open(ActionComponent, {\n      data: {\n        message,\n        student: this.student\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      // tslint:disable-next-line: triple-equals\n      if (message == 'Delete') {\n        this.dialogRef.close();\n        this.onDelete();\n      }\n      // tslint:disable-next-line: triple-equals\n      else if (message == 'Edit') {\n        this.dialogRef.close();\n        this.onClose();\n\n      }\n    });\n  }\n}\n\n\n\n@Component({\n  selector: 'app-action',\n  templateUrl: 'action.component.html',\n})\nexport class ActionComponent {\n  student: Student;\n  constructor(public dialogRef: MatDialogRef<ActionComponent>, @Inject(MAT_DIALOG_DATA) public data: any, public router: Router) {\n\n    this.student = data.student;\n  }\n\n  onYes() {\n    this.dialogRef.close({ data: 'editing' });\n  }\n}\n\n","<div class=\"container\">\n    <div class=\"options\">\n        <button mat-icon-button matTooltip=\"Edit Details\" (click)=\"openDialog('Edit')\" >\n            <mat-icon>create</mat-icon>\n        </button>\n        <button mat-icon-button matTooltip=\"Copy Details\" (click)=\"openDialog('Copy')\">\n            <mat-icon>content_copy</mat-icon>\n        </button>\n        <button mat-icon-button matTooltip=\"Delete Details\" (click)=\"openDialog('Delete')\">\n                <mat-icon>delete</mat-icon>\n        </button>\n\n        <button mat-icon-button matTooltip=\"Close\" (click)=\"onClose()\">\n            <mat-icon>close</mat-icon>\n        </button>\n\n    </div>\n    <br>\n\n    <div class=\"content\">\n        <mat-list>\n            <img matListAvatar [src]=\"'http://localhost:3000/images/'+student.image\" alt=\"Image of {{student.name}}\"\n                id=\"profile\">\n            <mat-list-item>\n                <div style=\"margin:10px 0;\">\n                    <!-- <span class=\"mat-body-strong\" style=\"color:grey;display:inline-block;\">Name:</span> -->\n                    <span class=\"mat-headline\" style=\"font-weight:800;\">{{student.name}}</span>\n                </div>\n            </mat-list-item>\n            <mat-list-item style=\"display: flex;\">\n                <div style=\"margin-right: 25px;\">\n                    <span class=\"mat-body-strong\" style=\"color:grey;display:inline-block;\">Year:</span>\n                    <span class=\"mat-h3\" *ngIf=\"student.year==1\">{{student.year+\"st\"}}</span>\n                    <span class=\"mat-h3\" *ngIf=\"student.year==2\">{{student.year+\"nd\"}}</span>\n                    <span class=\"mat-h3\" *ngIf=\"student.year==3\">{{student.year+\"rd\"}}</span>\n                    <span class=\"mat-h3\" *ngIf=\"student.year==4\">{{student.year+\"th\"}}</span>\n                </div>\n                <div>\n                    <span class=\"mat-body-strong\" style=\"color:grey;display:inline-block;\">Department:</span>\n                    <span class=\"mat-h3\">{{student.department}}</span>\n\n                </div>\n            </mat-list-item>\n\n            <mat-list-item style=\"display: flex;\">\n                <div style=\"margin-right: 25px;\">\n                    <span class=\"mat-body-strong\" style=\"color:grey;display:inline-block;\">Joining\n                        Year:</span>\n                    <span class=\"mat-h3\">{{student.joining_year}}</span>\n                </div>\n                <div>\n                    <span class=\"mat-body-strong\" style=\"color:grey;display:inline-block;\">Expected Graduation\n                        Passing:</span>\n                    <span class=\"mat-h3\">{{student.passing_year}}</span>\n\n                </div>\n            </mat-list-item>\n\n            <mat-list-item>\n                <div style=\"display: flex;\">\n                    <span>\n                        <mat-icon style=\"font-size: 20px;\">email</mat-icon>\n                    </span>\n                    <span class=\"mat-h4\">\n                        {{student.email}}\n                    </span>\n                </div>\n\n            </mat-list-item>\n            <mat-list-item>\n                <div style=\"display: flex;\">\n                    <span>\n                        <mat-icon style=\"font-size: 20px;\">home</mat-icon>\n                    </span>\n                    <span class=\"mat-h4\">\n                        {{student.address}}\n                    </span>\n                </div>\n\n            </mat-list-item>\n\n            <mat-list-item>\n                <div style=\"display: flex;\">\n                    <span>\n                        <mat-icon style=\"font-size: 20px;\">phone</mat-icon>\n                    </span>\n                    <span class=\"mat-h4\">\n                        {{student.phone}}\n                    </span>\n                </div>\n\n            </mat-list-item>\n        </mat-list>\n\n    </div>\n    </div>\n","<div class=\"content\">\n    <p>Are you sure you want to {{data.message}}?</p>\n    <mat-dialog-actions>\n\n        <button *ngIf=\"data.message==='Edit'\" mat-button (click)=\"router.navigate(['/editStudent'],{state: {data: student}})\"\n            mat-dialog-close>Yes,sure</button>\n            <button *ngIf=\"data.message==='Copy'\" mat-button (click)=\"router.navigate(['/newStudent'],{state: {data: student}})\"\n            mat-dialog-close>Yes,sure</button>\n        <button *ngIf=\"data.message==='Delete'\" mat-button type=\"button\" mat-dialog-close\n           >Yes,sure</button>\n        <button mat-button mat-dialog-close>Close</button>\n\n    </mat-dialog-actions>\n</div>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoutesService {\n  route: string;\n  constructor() {\n    this.route = '';\n  }\n\n  setRoute(rt: string) {\n    console.log(rt);\n    this.route = rt;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Student } from '../models/student.model';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { ImageSnippet } from '../models/image.model';\nimport { RestService } from '../services/rest.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { mimType } from './mime-type.validator';\nimport { RoutesService } from '../services/routes.service';\nimport { StateService } from '../services/state.service';\nimport { NotificationService } from '../services/notification.service';\nimport { async } from '@angular/core/testing';\n\ndeclare var previewFile: any;\n\n@Component({\n    selector: 'app-create',\n    templateUrl: './create.component.html',\n    styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n    url: ArrayBuffer;\n    student: Student;\n    studentId = null;\n    imgPreview: string;\n    form: FormGroup;\n    mode = 'Create';\n    selectedFile: ImageSnippet;\n    file: File;\n    dataBlob: Blob;\n    fileChanges = false;\n    constructor(\n        private router: Router,\n        private route: ActivatedRoute,\n        private notifService: NotificationService,\n        public routes: RoutesService,\n        // tslint:disable-next-line: variable-name\n        private _snackBar: MatSnackBar,\n        private state: StateService,\n        // private _location: Location,\n        private rest: RestService) {\n        // tslint:disable-next-line: triple-equals\n        if (this.router.getCurrentNavigation().extras.state != undefined) {\n            this.student = this.router.getCurrentNavigation().extras.state.data;\n        }\n        this.downloadImageStudent();\n        this.form = new FormGroup({\n            _id: new FormControl(null),\n            name: new FormControl(this.student?.name, { validators: [Validators.required] }),\n            department: new FormControl(this.student?.department, { validators: [Validators.required] }),\n            address: new FormControl(this.student?.address, { validators: [Validators.required] }),\n            joining_year: new FormControl(this.student?.joining_year, { validators: [Validators.required] }),\n            year: new FormControl(this.student?.year, { validators: [Validators.required] }),\n            passing_year: new FormControl(this.student?.passing_year, { validators: [Validators.required] }),\n            email: new FormControl(this.student?.email, { validators: [Validators.required] }),\n            phone: new FormControl(this.student?.phone, { validators: [Validators.required] }),\n            image: new FormControl(this.dataBlob, {\n                asyncValidators: [mimType]\n            })\n            // only accept images\n        });\n        console.log(this.form);\n        console.log(this.student);\n    }\n\n    ngOnInit(): void {\n    }\n\n    async downloadImageStudent() {\n        if (this.student) { \n            const resp = await this.rest.downloadImage(this.student.image);\n            this.dataBlob = resp;\n            console.log(this.dataBlob);\n            this.form.patchValue({ image: this.dataBlob });\n            this.form.get('image').updateValueAndValidity();\n            this.imgPreview = `${this.rest.baseUrl}images/${this.student.image}`;\n        }\n    }\n\n    onImagePicked($event: Event) {\n        this.file = ($event.target as HTMLInputElement).files[0];\n        this.form.patchValue({ image: this.file }); // for single control\n        this.form.get('image').updateValueAndValidity();\n        const reader = new FileReader();\n        reader.onload = () => {\n            this.imgPreview = reader.result as string;\n        };\n        this.fileChanges = true;\n        reader.readAsDataURL(this.file);\n    }\n\n    async onSubmit() {\n        // tslint:disable-next-line: triple-equals\n        if (this.routes.route == '/newStudent') {\n            const value = this.form.value;\n            console.log(value);\n            const { name, department, address, joining_year, year, passing_year, email, phone } = value;\n            const student: Student = {\n                name,\n                department,\n                address,\n                joining_year: parseInt(joining_year, 10),\n                year: parseInt(year, 10),\n                passing_year: parseInt(passing_year, 10),\n                email,\n                phone,\n            };\n            console.log(student);\n            const message = `Adding new Student: ${name}`;\n            const action = 'Undo';\n            let undo = false;\n            const ref = this._snackBar.open(message, action, {\n                duration: 2000,\n            });\n            this.router.navigate(['/list']);\n            ref.onAction().subscribe(() => undo = true);\n            ref.afterDismissed().subscribe(async () => {\n                if (!undo) {\n                    this.notifService.addNotifs(message);\n                    const resp = await this.rest.addStudent(student, this.file);\n                    if (resp.status) {\n                        // alert(`New student ${name} added`);\n                        this.notifService.addNotifs(`New student ${name} added`);\n                    }\n                    else {\n                        // alert(`New student ${name} not added`);\n                        this.notifService.addNotifs(`New student ${name} not added`);\n                    }\n                }\n                else {\n                    // alert('New student was not created');\n                    this.notifService.addNotifs('New student was not created');\n                }\n                this.state.updateList();\n            });\n        }\n        else if (this.routes.route === '/editStudent') {\n            const value = this.form.value;\n            const { name, department, address, joining_year, year, passing_year, email, phone } = value;\n            const student: Student = {\n                _id: this.student._id,\n                name,\n                department,\n                address,\n                joining_year: parseInt(joining_year, 10),\n                year: parseInt(year, 10),\n                passing_year: parseInt(passing_year, 10),\n                email,\n                phone,\n            };\n            const message = `Updating student: ${name}`;\n            const action = 'Undo';\n            let undo = false;\n            const ref = this._snackBar.open(message, action, {\n                duration: 2000,\n            });\n            this.router.navigate(['/list']);\n            ref.onAction().subscribe(() => undo = true);\n            ref.afterDismissed().subscribe(async () => {\n                // console.log(undo);\n                if (!undo) {\n                    this.notifService.addNotifs(message);\n                    const resp = await this.rest.updateStudent(student, (this.fileChanges) ? this.file : null);\n                    if (resp.status) {\n                        alert(`Student ${name} updated`);\n                        this.notifService.addNotifs(`Student ${name} updated`);\n                    }\n                    else {\n                        alert(`Student ${name} not updated`);\n                        this.notifService.addNotifs(`Student ${name} updated`);\n                    }\n                }\n                else {\n                    alert('Updation cancelled');\n                }\n                this.state.updateList();\n            });\n\n            // this.router.navigate(['/list']);\n        }\n\n\n        // this.router.navigate(['/list']);\n    }\n\n    onClose() {\n        window.history.back();\n    }\n}\n","<div class=\"newForm\">\n    <mat-card class=\"mat-elevation-z4\">\n        <mat-card-subtitle>*All fields are required</mat-card-subtitle>\n        <form [formGroup]=\"form\" name=\"form\" (ngSubmit)=\"onSubmit()\">\n            \n                <!-- <button mat-stroke-button type=\"button\" (click)=\"filePicker.click()\">Pick Image</button> -->\n             <input type=\"file\" #filePicker (change)=\"onImagePicked($event)\">\n            \n            <div class=\"image-preview\" (click)=\"filePicker.click()\">\n                <img matTooltip=\"Upload Image\" class=\"default\" *ngIf=\"!imgPreview\"\n                    src=\"https://cdn.onlinewebfonts.com/svg/img_508039.png\">\n                <img [src]=\"imgPreview\" class=\"uploaded\" *ngIf=\"imgPreview && form.get('image').valid\" [alt]=\"form.value.name\">\n            </div>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Name\" formControlName=\"name\" type=\"text\">\n                <mat-error *ngIf=\"form.get('name').invalid && form.get('name').touched\">This field is required!\n                </mat-error>\n            </mat-form-field> \n\n            <!-- <div formGroupName=\"name\" style=\"display: flex;\">\n                <mat-form-field class=\"example-full-width\">\n                <mat-label>First name</mat-label>\n                <input matInput  formControlName=\"firstname\" type=\"text\">\n              </mat-form-field>\n              <mat-form-field class=\"example-full-width\">\n                <mat-label>Last Name</mat-label>\n                <input matInput  formControlName=\"lastname\" type=\"text\">\n              </mat-form-field>\n            </div> -->\n\n            <div style=\"display: flex;\">\n                <mat-form-field style=\"margin-right:4%;width:25%\">\n                    <mat-label>Year</mat-label>\n                    <mat-select formControlName=\"year\">\n                        <mat-option [value]=\"1\">1</mat-option>\n                        <mat-option [value]=\"2\">2</mat-option>\n                        <mat-option [value]=\"3\">3</mat-option>\n                        <mat-option [value]=\"4\">4</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"form.get('year').invalid && form.get('year').touched\">\n                        This field is required!</mat-error>\n                </mat-form-field>\n\n                <mat-form-field style=\"width: 30%;\">\n                    <mat-label>Department</mat-label>\n                    <mat-select formControlName=\"department\">\n                        <mat-option value=\"IT\">IT</mat-option>\n                        <mat-option value=\"CSE\">CSE</mat-option>\n                        <mat-option value=\"ECE\">ECE</mat-option>\n                        <mat-option value=\"EE\">EE</mat-option>\n                        <mat-option value=\"ME\">ME</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"form.get('department').invalid && form.get('department').touched\">\n                        This field is required!</mat-error>\n                </mat-form-field>\n            </div>\n\n            <div style=\"display:flex\">\n                <mat-form-field style=\"margin-right:4%;width:25%\">\n                    <mat-label>Joining Year</mat-label>\n                    <mat-select formControlName=\"joining_year\">\n                        <mat-option [value]=\"2016\">2016</mat-option>\n                        <mat-option [value]=\"2017\">2017</mat-option>\n                        <mat-option [value]=\"2018\">2018</mat-option>\n                        <mat-option [value]=\"2019\">2019</mat-option>\n                        <mat-option [value]=\"2020\">2020</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"form.get('joining_year').invalid && form.get('joining_year').touched\">\n                        This field is required!</mat-error>\n                </mat-form-field>\n\n\n                <mat-form-field style=\"width: 30%;\">\n                    <mat-label>Expected Year Of Graduation</mat-label>\n                    <mat-select formControlName=\"passing_year\">\n                        <mat-option [value]=\"2020\">2020</mat-option>\n                        <mat-option [value]=\"2021\">2021</mat-option>\n                        <mat-option [value]=\"2022\">2022</mat-option>\n                        <mat-option [value]=\"2023\">2023</mat-option>\n                        <mat-option [value]=\"2024\">2024</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"form.get('passing_year').invalid && form.get('passing_year').touched\">\n                        This field is required!</mat-error>\n                </mat-form-field>\n            </div>\n\n\n            <mat-form-field>\n                <textarea matInput placeholder=\"Address\" formControlName=\"address\" type=\"text\" rows=\"2\"></textarea>\n                <mat-error *ngIf=\"form.get('address').invalid && form.get('address').touched\">\n                    This field is required!\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input formControlName=\"phone\" matInput placeholder=\"Contact No.\" type=\"number\">\n                <mat-error *ngIf=\"form.get('phone').invalid && form.get('phone').touched\">\n                    This field is required!\n                </mat-error>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input formControlName=\"email\" matInput placeholder=\"Email\" type=\"email\">\n                <mat-error *ngIf=\"form.get('email').invalid && form.get('email').touched\">\n                    This field is required!\n                </mat-error>\n            </mat-form-field>\n\n\n\n\n\n\n\n            <mat-card-actions align=\"end\">\n                <button type=\"submit\" [disabled]=\"!form.valid\" mat-raised-button color=\"primary\">Save</button>\n                <button type=\"button\" (click)=\"onClose()\" mat-raised-button color=\"warn\">Cancel</button>\n\n\n\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Notification } from '../models/notification.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  notifs: Notification[] = [];\n  count = 0;\n  notifsObserver = new Subject<Notification[]>();\n  notifsObserver$ = this.notifsObserver.asObservable();\n  notifsCountObserver = new Subject<number>();\n  notifsCountObserver$ = this.notifsCountObserver.asObservable();\n  constructor() { }\n\n  getAllNotifs() {\n    return this.notifs;\n  }\n\n  addNotifs(message: string) {\n    const notif: Notification = {\n      message,\n      date: new Date()\n    };\n    this.notifs = [notif].concat(this.notifs);\n    this.notifsObserver.next(this.notifs);\n    this.count += 1;\n    this.notifsCountObserver.next(this.count);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Student } from '../models/student.model';\nimport { RestService } from '../services/rest.service';\nimport { Chart } from 'node_modules/chart.js';\nimport { async } from '@angular/core/testing';\nimport { Router } from '@angular/router';\nimport { state } from '@angular/animations';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  students: Student[];\n  toggle = true;\n  years = [1, 2, 3, 4];\n  yearsData = [];\n  streams = ['IT', 'CSE', 'ECE', 'EE', 'ME'];\n  streamsData = [];\n  totalStudents = 0;\n  chart1: any;\n  chart2: any;\n  constructor(private rest: RestService, private router: Router) {\n    this.fetchData();\n  }\n\n  // students:Student[];\n  // buttonClickd=false;\n\n  async ngOnInit() {\n  }\n\n\n\n  async fetchData() {\n    const resp = await this.rest.getAllStudents();\n    this.students = resp.data;\n    this.totalStudents = this.students.length;\n    this.streams.forEach(async (stream) => {\n      const res = await this.rest.getStudents({ department: stream });\n      this.streamsData.push(res.data.length);\n    });\n    this.years.forEach(async (year) => {\n      const res = await this.rest.getStudents({ year });\n      this.yearsData.push(res.data.length);\n    });\n    console.log(this.streamsData);\n    console.log(this.yearsData);\n    this.chart1 = new Chart('myChart', {\n      type: 'bar',\n      data: {\n        labels: this.streams,\n        datasets: [{\n          data: this.streamsData,\n\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 206, 86, 0.2)',\n            'rgba(75, 192, 192, 0.2)',\n            'rgba(153, 102, 255, 0.2)',\n\n          ],\n          borderColor: [\n            'rgba(255, 99, 132, 1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n            'rgba(153, 102, 255, 1)',\n\n          ],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          yAxes: [{\n            ticks: {\n              min: 0,\n              max: 50\n            }\n          }]\n        }\n      }\n    });\n\n    this.chart2 = new Chart('myPChart', {\n      type: 'pie',\n      data: {\n        labels: ['1', '2', '3', '4'],\n        datasets: [{\n          backgroundColor: ['#3e95cd', '#8e5ea2', '#3cba9f', '#e8c3b9'],\n          data: this.yearsData\n        }]\n      },\n      options: {\n\n        legend: {\n          position: 'right',\n        }\n      }\n    });\n    console.log(this.chart1.data.datasets[0]);\n    console.log(this.chart2.data.datasets[0]);\n  }\n\n\n  async onClick(num: number) {\n    // const resp = await this.rest.getStudents({ year:num});\n    this.router.navigate(['list'], { state: { filterYear: num } });\n\n  }\n\n  async onStream(s: string) {\n    // const resp = await this.rest.getStudents({ department:s });\n    console.log(s);\n    this.router.navigate(['list'], { state: { filterDept: s } });\n  }\n\n}\n","<div class=\"full\">\n  <mat-card class=\"graph-card\">\n  <div class=\"full-grid\">\n\n    <div class=\"center-div\">\n      <div style=\"text-align: center;\">\n        <p style=\"color: grey;margin-bottom: 20px;\">Division of Students wrt Year</p>\n        <div id=\"chart\">\n          <canvas id=\"myPChart\"></canvas>\n        </div>\n      </div>\n    </div>\n\n\n    <div class=\"center-div\">\n      <div style=\"text-align: center;padding:5px\">\n        <p style=\"color: grey;margin-bottom: 20px;\">Division of Students wrt Branch</p>\n        <div id=\"chart\">\n          <canvas id=\"myChart\"></canvas>\n        </div>\n      </div>\n    </div>\n\n  </div>\n  <div class=\"total\" [routerLink]=\"['/list']\">\n    <mat-card class=\"card1\">\n      <mat-card-content>\n        <div style=\"text-align: center;\">\n          <p class=\"mat-h4\">Total Students</p>\n          <br>\n          <p class=\"mat-display-4\">{{totalStudents}}</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</mat-card>\n<div style=\"display: flex;justify-content: space-evenly;\">\n  <p style=\"width:100%;text-align:center;text-decoration:underline;color:grey;\" class=\"mat-h2 heading\">\n    Division of Students by Year\n  </p>\n  <p style=\"width:100%;text-align:center;text-decoration:underline;color:grey;\" class=\"mat-h2 heading\">\n    Division of Students by Branch\n  </p>\n</div>\n\n\n<div class=\"grid-col\">\n\n\n  <mat-card class=\"grid-col cards\">\n\n    <mat-card class=\"card\"   (click)=\"onClick(1)\"  style=\"margin-bottom: 10px;\">\n      <mat-card-content class=\"center-div\">\n        <div>\n          <p class=\"mat-h4\">1st Year</p>\n          <p class=\"mat-display-3\" style=\"text-align: center;\">{{yearsData[0]}}</p>\n        </div>\n      </mat-card-content>\n      \n    </mat-card>\n\n\n    <mat-card class=\"card\"  (click)=\"onClick(2)\" style=\"margin-bottom: 10px;\">\n      <mat-card-content class=\"center-div\">\n        <div>\n          <p class=\"mat-h4\">2nd Year</p>\n          <p class=\"mat-display-3\" style=\"text-align: center;\">{{yearsData[1]}}</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n\n\n    <mat-card class=\"card\"  (click)=\"onClick(3)\" >\n      <mat-card-content class=\"center-div\">\n        <div>\n          <p class=\"mat-h4\">3rd Year</p>\n          <p class=\"mat-display-3\" style=\"text-align: center;\">{{yearsData[2]}}</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n\n\n    <mat-card class=\"card\"  (click)=\"onClick(4)\" >\n      <mat-card-content class=\"center-div\">\n        <div>\n          <p class=\"mat-h4\">4th Year</p>\n          <p class=\"mat-display-3\" style=\"text-align: center;\">{{yearsData[3]}}</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n\n\n  </mat-card>\n\n\n  <mat-card class=\"three-grid\">\n\n    <mat-card class=\"card\" [routerLink]=\"['/list']\" style=\"margin-bottom: 15px;\"  (click)=\"onStream('IT')\">\n      <mat-card-content class=\"center-div\">\n        <div>\n          <p class=\"mat-h4\">IT</p>\n          <p class=\"mat-display-2\" style=\"text-align: center;\">{{streamsData[0]}}</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n\n\n    <mat-card class=\"card\" [routerLink]=\"['/list']\" (click)=\"onStream('CSE')\" style=\"margin-bottom: 15px;\">\n      <mat-card-content class=\"center-div\">\n        <div>\n          <p class=\"mat-h4\">CSE</p>\n          <p class=\"mat-display-2\" style=\"text-align: center;\">{{streamsData[1]}}</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n\n\n    <mat-card class=\"card\" [routerLink]=\"['/list']\" (click)=\"onStream('ECE')\" style=\"margin-bottom: 10px;\">\n      <mat-card-content class=\"center-div\">\n        <div>\n          <p class=\"mat-h4\">ECE</p>\n          <p class=\"mat-display-2\" style=\"text-align: center;\">{{streamsData[2]}}</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n\n\n    <mat-card class=\"card\" [routerLink]=\"['/list']\" (click)=\"onStream('EE')\">\n      <mat-card-content class=\"center-div\">\n        <div>\n          <p class=\"mat-h4\">EE</p>\n          <p class=\"mat-display-2\" style=\"text-align: center;\">{{streamsData[3]}}</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n\n\n    <mat-card class=\"card\" [routerLink]=\"['/list']\" (click)=\"onStream('ME')\">\n      <mat-card-content class=\"center-div\">\n        <div>\n          <p class=\"mat-h4\">ME</p>\n          <p class=\"mat-display-2\" style=\"text-align: center;\">{{streamsData[4]}}</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n\n\n  </mat-card>\n</div>\n</div>","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators'\nimport { throwError } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ErrorComponent } from './error/error.component';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n    constructor(private dialog: MatDialog) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\n        return next.handle(req).pipe(\n            catchError(\n                (error: HttpErrorResponse) => {\n                    //console.log(error)\n                    let msg = \"Unknown Error Occured\"\n                    if (error.error.message) {\n                        msg = error.error.message\n                        console.log(error.error.message)\n\n                    }\n                    this.dialog.open(ErrorComponent, {\n                        data: { message: msg },\n                        width: '200px'\n\n                    });\n                    return throwError(error)\n                }\n            )\n        )\n            ;\n    }\n\n}","import { Component } from '@angular/core';\nimport { RoutesService } from './services/routes.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n  constructor(public route: RoutesService){}\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n","import { AbstractControl } from '@angular/forms';\nimport { Observable, Observer } from 'rxjs';\n//async validator\n\nexport const mimType = (control: AbstractControl):\n    Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\n    const file = control.value as File\n    const fileReader = new FileReader();\n    const obs = Observable.create(\n        (observer: Observer<{ [key: string]: any }>) => {\n            //same like onload()\n            fileReader.addEventListener(\"loadend\", () => {\n\n                //mimetype validation\n                const array = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\n                //checks if input is onlu images\n                let header = \"\";\n                let isValid=false;\n                for (let i = 0; i < array.length; i++) {\n                    header += array[i].toString(16);\n                    //to hexadecimal\n                }\n                switch (header){\n                    case \"89504e47\":\n                        isValid=true;\n                        break;\n                    case \"ffd8ffe0\":\n                    case \"ffd8ffe1\":\n                    case \"ffd8ffe2\":\n                    case \"ffd8ffe3\":\n                    case \"ffd8ffe8\":\n                        isValid=true;\n                        break;\n                    default:\n                        isValid=false;\n                        break;\n\n                }\n\n                if(isValid){\n                    observer.next(null)\n                }\n                else{\n                    observer.next({invalidtype:true})\n                }\n                observer.complete();\n\n            });\n            fileReader.readAsArrayBuffer(file);\n\n        }\n    );\n    return obs;\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MaterialModule } from './material/material.module';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { RouterModule, Router, RouterEvent, NavigationEnd } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ListComponent } from './list/list.component';\nimport { CreateComponent } from './create/create.component';\nimport { StudentDetailComponent, ActionComponent } from './student-detail/student-detail.component';\nimport { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RoutesService } from './services/routes.service';\nimport { MaterialElevationDirective } from './material-elevation.directive';\nimport { LoginComponent} from './login/login.component';\nimport { AuthService } from './services/auth.service';\nimport { RestService } from './services/rest.service';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { UserComponent } from './user/user.component';\nimport {ErrorInterceptor} from './error-interceptor';\nimport { RegisterComponent } from './register/register.component';\nimport { ErrorComponent } from './error/error.component';\nimport { StateService } from './services/state.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    DashboardComponent,\n    ListComponent,\n    ActionComponent,\n    CreateComponent,\n    StudentDetailComponent,\n    ErrorComponent,\n    MaterialElevationDirective,\n    LoginComponent,\n    UserComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule, MaterialModule,\n    BrowserAnimationsModule, RouterModule, FormsModule, ReactiveFormsModule,\n    HttpClientModule, FlexLayoutModule\n  ],\n  providers: [AuthService, RestService, RoutesService,StateService,\n    {provide:HTTP_INTERCEPTORS,useClass: ErrorInterceptor,multi:true}\n  ],\n  entryComponents: [StudentDetailComponent,ErrorComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(\n    private readonly router: Router,\n    private routes: RoutesService\n  ) {\n    router.events\n      .subscribe((event: RouterEvent) => {\n        if (event instanceof NavigationEnd) {\n          this.routes.setRoute(event.url);\n        }\n      });\n  }\n}\n","import { Directive, ElementRef, HostListener, Input, Renderer2, OnChanges, SimpleChanges } from '@angular/core';\n\n@Directive({\n  selector: '[appMaterialElevation]'\n})\nexport class MaterialElevationDirective implements OnChanges {\n\n  @Input()\n  defaultElevation = 2;\n\n  @Input()\n  raisedElevation = 6;\n\n  constructor(\n    private element: ElementRef,\n    private renderer: Renderer2\n  ) {\n    this.setElevation(this.defaultElevation);\n  }\n\n  // tslint:disable-next-line: variable-name\n  ngOnChanges( _changes: SimpleChanges) {\n    this.setElevation(this.defaultElevation);\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter() {\n    this.setElevation(this.raisedElevation);\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave() {\n    this.setElevation(this.defaultElevation);\n  }\n\n  setElevation(amount: number) {\n    // remove all elevation classes\n    const classesToRemove = Array.from(( this.element.nativeElement as HTMLElement).classList).filter(c => c.startsWith('mat-elevation-z'));\n    classesToRemove.forEach((c) => {\n      this.renderer.removeClass(this.element.nativeElement, c);\n    });\n\n    // add the given elevation class\n    const newClass = `mat-elevation-z${amount}`;\n    this.renderer.addClass(this.element.nativeElement, newClass);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MaterialModule } from '../material/material.module';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RoutesService } from '../services/routes.service';\nimport { AuthService } from '../services/auth.service';\nimport { NgForm } from '@angular/forms';\nimport { Notification } from '../models/notification.model';\nimport { NotificationService } from '../services/notification.service';\nimport { state } from '@angular/animations';\nimport { HttpClient } from '@angular/common/http';\nimport { Student } from '../models/student.model';\nimport { RestService } from '../services/rest.service';\nimport { StateService } from '../services/state.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  href: string;\n  isRoundButton = true;\n  name = '';\n  email = '';\n  isLogged = false;\n  notifs: Notification[];\n  searchText = '';\n  notifCount: number;\n  students: Student[] = [];\n\n\n  constructor(\n    private route: ActivatedRoute,\n    public router: Router,\n    private http: HttpClient,\n    public routes: RoutesService,\n    private stateServ: StateService,\n    public rest: RestService,\n    public auth: AuthService,\n    private notifService: NotificationService) {\n    this.auth.loginObserver$.subscribe((login) => {\n      console.log('login event');\n      if (login) {\n        this.name = login.user.name;\n        this.email = login.user.email;\n        this.isLogged = true;\n      }\n      else {\n        this.name = '';\n        this.email = '';\n        this.isLogged = false;\n      }\n    });\n    this.auth.loadLogin();\n    this.notifService.notifsObserver$.subscribe(notifs => this.notifs = notifs);\n    this.notifService.notifsCountObserver$.subscribe(count => this.notifCount = count);\n    // this.fetchNotif();\n  }\n\n  ngOnInit(): void {\n\n\n  }\n  fetchNotif() {\n    this.notifs = this.notifService.getAllNotifs();\n    this.notifCount = this.notifs.length;\n  }\n  isActive() {\n    this.href = this.router.url;\n  }\n\n  onLogin() {\n\n    this.router.navigate(['/']);\n\n  }\n  onRegister() {\n    this.router.navigate(['/']);\n  }\n  logout() {\n    this.auth.logout();\n    this.notifCount = 0;\n    this.router.navigate(['login']);\n  }\n\n  goBack() {\n    window.history.back();\n  }\n\n  async search() {\n    console.log(this.searchText);\n    const resp = await this.rest.getStudentonSearch(this.searchText);\n    console.log(resp.data.length);\n    this.stateServ.search(resp.data);\n  }\n\n  manage() {\n    this.router.navigate(['/user'], { state: { username: this.name, useremail: this.email } });\n  }\n}\n","<mat-sidenav-container class=\"header\">\n    <mat-sidenav #sidenav mode=\"over\">\n        <mat-list>\n            <div class=\"details\">\n                <p *ngIf=\"!isLogged\">You are not logged in!<br>\n                    Login to see details!</p>\n                <mat-list-item *ngIf=\"name!==''\">\n                    <img matListAvatar style=\"display: block;\" src=\"https://wprdea.org/image/img_avatar.png\"\n                        alt=\"img of a man\">\n                    <div mat-line class=\"mat-title\">{{name}}</div>\n                    <div mat-line>{{email}}</div>\n\n\n                </mat-list-item>\n                <mat-list-item *ngIf=\"name!==''\">\n                    <button class=\"manage\" mat-button isRoundButton (click)=\"manage()\">\n                        Manage Your Profile\n                    </button>\n                </mat-list-item>\n            </div>\n        </mat-list>\n        <mat-divider></mat-divider>\n\n        <mat-nav-list *ngIf=\"isLogged\">\n            <a mat-list-item [routerLink]=\"['/dashboard']\" routerLinkActive=\"active\">\n                <mat-icon matListIcon>dashboard</mat-icon>\n                <div mat-line>Dashboard</div>\n            </a>\n            <a mat-list-item [routerLink]=\"['/list']\" routerLinkActive=\"active\">\n                <mat-icon matListIcon>group</mat-icon>\n                <div mat-line>Students</div>\n            </a>\n            <a mat-list-item [routerLink]=\"['/settings']\" routerLinkActive=\"active\">\n                <mat-icon matListIcon>settings</mat-icon>\n                <div mat-line>Settings</div>\n            </a>\n            <a mat-list-item [routerLink]=\"['/help']\" routerLinkActive=\"active\">\n                <mat-icon matListIcon>help</mat-icon>\n                <div mat-line>Help</div>\n            </a>\n        </mat-nav-list>\n\n    </mat-sidenav>\n    <mat-sidenav-content style=\"padding: 0px;\">\n\n        <mat-toolbar color=\"primary\" class=\"mat-elevation-z6 app-toolbar\"\n            *ngIf=\"routes.route!=='/login' && routes.route!=='/register'\">\n            <button mat-icon-button *ngIf=\"routes.route!='/editStudent' && routes.route!='/newStudent'\"\n                class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n                <mat-icon (click)=\"sidenav.toggle()\">menu</mat-icon>\n            </button>\n\n            <button mat-icon-button *ngIf=\"routes.route=='/editStudent' || routes.route=='/newStudent'\"\n                class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n                <mat-icon (click)=\"goBack()\">arrow_back_ios</mat-icon>\n            </button>\n            <div style=\"margin-left: 5px;\">\n                <span *ngIf=\"routes.route=='/login'\">Login</span>\n                <span *ngIf=\"routes.route=='/register'\">Register</span>\n                <span *ngIf=\"routes.route=='/editStudent'\">Edit Student</span>\n                <span *ngIf=\"routes.route=='/dashboard'\">Dashboard</span>\n                <span *ngIf=\"routes.route=='/user'\">User Profile</span>\n                <span *ngIf=\"routes.route=='/list'\">Students</span>\n                <span *ngIf=\"routes.route=='/settings'\">Settings</span>\n                <span *ngIf=\"routes.route=='/help'\">Help</span>\n                <span *ngIf=\"routes.route=='/newStudent'\">Add Student</span>\n            </div>\n\n            <form *ngIf=\"routes.route=='/list'\" class=\"example\" style=\"margin:0 auto;max-width:350px;\">\n                <input type=\"text\" placeholder=\"Search\" name=\"search\" [(ngModel)]=\"searchText\" (change)=\"search()\" >\n                <button type=\"submit\"><i class=\"fa fa-search\"></i></button>\n            </form>\n\n\n\n            <button mat-icon-button style=\"float: right;position:absolute;right:80px\" class=\"example-icon\"\n                [matMenuTriggerFor]=\"aboveMenu\" aria-label=\"Example icon-button with notification icon\">\n                <mat-icon [matBadge]=\"notifCount\" matBadgeColor=\"warn\">notifications</mat-icon>\n            </button>\n            <mat-menu #aboveMenu=\"matMenu\" xPosition=\"before\">\n                <button mat-menu-item *ngFor=\"let notif of notifs\">\n                    <span>{{notif.message}}</span></button>\n            </mat-menu>\n\n\n            <button style=\"float: right;position:absolute;right:20px\" class=\"example-icon2\" mat-icon-button\n                [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n                <mat-icon>more_vert</mat-icon>\n            </button>\n\n            <mat-menu #menu=\"matMenu\">\n                <button (click)=\"logout()\" mat-menu-item *ngIf=\"name!==''\">\n                    <mat-icon>login</mat-icon>\n                    <span><a>Logout</a></span>\n                </button>\n                <button mat-menu-item *ngIf=\"name===''\">\n                    <mat-icon>login</mat-icon>\n                    <span><a routerLink=\"/login\" (click)=\"onLogin()\">Login</a></span>\n                </button>\n                <button mat-menu-item *ngIf=\"name===''\">\n                    <mat-icon>login</mat-icon>\n                    <span><a routerLink=\"/register\" (click)=\"onRegister()\">Register</a></span>\n                </button>\n            </mat-menu>\n\n        </mat-toolbar>\n\n\n        <app-footer></app-footer>\n\n\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RoutesService } from '../services/routes.service';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\nnewMode = false;\n  constructor(public routes: RoutesService) { }\n\n  ngOnInit(): void {\n  }\n onAdd(){\nthis.newMode  =  true;\n\n }\n}\n","<div class=\"button-container\" *ngIf=\"routes.route!=='/newStudent' && routes.route!=='/register' && routes.route!=='/editStudent' && routes.route!=='/login' && routes.route!=='/dashboard'\">\n    <button mat-fab color=\"accent\" aria-label=\"Example icon button with a more icon\"><a  style=\"text-decoration: none;color: white;\" routerLink=\"/newStudent\">\n      <mat-icon>person_add_alt_1</mat-icon></a>\n    </button>\n  </div>\n\n  \n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox'\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport {MatBadgeModule} from '@angular/material/badge';\n\nconst materialComponents = [\n  MatButtonModule,\n  MatSnackBarModule,\n  MatCheckboxModule,\n  MatTooltipModule,\n  MatRippleModule,\n  MatBadgeModule,\n  MatButtonToggleModule,\n  MatIconModule,\n  MatDialogModule,\n  MatToolbarModule,\n  MatSidenavModule,\n  MatGridListModule,\n  MatListModule,\n  MatMenuModule,\n  MatSelectModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatCardModule,\n  MatRadioModule\n];\n@NgModule({\n\n  imports: [...materialComponents],\n  exports: [...materialComponents],\n  providers: [\n    {\n      provide: MatDialogRef,\n      useValue: {}\n    }\n  ],\n})\nexport class MaterialModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User, Login } from '../models/auth.model';\nimport { ServerResponse } from '../models/server-response.model';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private baseUrl = '';\n  login: Login;\n  loginObserver = new Subject<Login>();\n  loginObserver$ = this.loginObserver.asObservable();\n  constructor(private http: HttpClient) {\n    this.loadLogin();\n  }\n\n  loadLogin() {\n    if (localStorage.getItem('LOGIN')) {\n      this.login = JSON.parse(localStorage.getItem('LOGIN'));\n      console.log(this.login);\n      this.loginObserver.next(this.login);\n    }\n  }\n\n  public registerUser(user: User): Promise<ServerResponse<User>> {\n    const url = `${this.baseUrl}auth/register`;\n    return this.http.post<ServerResponse<User>>(url, user).toPromise();\n  }\n\n  public loginUser(email: string, password: string): Promise<ServerResponse<Login>> {\n    const url = `${this.baseUrl}auth/login`;\n    return this.http.post<ServerResponse<Login>>(url, { email, password }).toPromise();\n  }\n\n  public storeLogin(log: Login) {\n    this.login = log;\n    localStorage.setItem('LOGIN', JSON.stringify(this.login));\n    this.loginObserver.next(this.login);\n  }\n\n  public getLogin(): Login {\n    return this.login;\n  }\n\n  public logout() {\n    this.login = null;\n    this.loginObserver.next(null);\n    localStorage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Student } from '../models/student.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n  private listUpdates = new Subject<string>();\n  private searchUpdates = new Subject<Student[]>();\n  public listUpdates$ = this.listUpdates.asObservable();\n  public searchUpdates$ = this.searchUpdates.asObservable();\n  constructor() { }\n\n  public updateList() {\n    console.log('update');\n    this.listUpdates.next('update');\n  }\n\n  public search(results: Student[]) {\n    this.searchUpdates.next(results);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Student } from '../models/student.model';\nimport { ServerResponse } from '../models/server-response.model';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestService {\n  baseUrl = '';\n  constructor(private http: HttpClient) { }\n  private students: Student[] = [];\n  private studentsUpdated = new Subject<Student[]>();\n\n  formatQuery(paramMap): string {\n    const keys = Object.keys(paramMap);\n    if (keys.length === 0) {\n      return '';\n    }\n\n    let qparam = '';\n    const key0 = keys[0];\n    qparam = '?' + key0 + '=' + paramMap[key0];\n\n    keys.forEach(element => {\n      if (element === key0) {\n        return;\n      }\n      qparam += '&' + element + '=' + paramMap[element];\n    });\n    return qparam;\n  }\n\n  public getStudentonSearch(query: string){\n    const url = `${this.baseUrl}students/search`;\n    return this.http.post<ServerResponse<Student[]>>(url, { query }).toPromise();\n\n  }\n  public getAllStudents(): Promise<ServerResponse<Student[]>> {\n    const url = `${this.baseUrl}students`;\n    return this.http.get<ServerResponse<Student[]>>(url).toPromise();\n  }\n\n  public getStudents(queries): Promise<ServerResponse<Student[]>> {\n    const url = `${this.baseUrl}students${this.formatQuery(queries)}`;\n    return this.http.get<ServerResponse<Student[]>>(url).toPromise();\n  }\n  public addStudent(student: Student, file: File): Promise<ServerResponse<Student>> {\n    const postData = new FormData();\n    Object.keys(student).forEach((key) => {\n      postData.append(key, student[key]);\n    });\n    postData.append('student-image', file, file.name);\n    console.log(postData);\n\n    const url = `${this.baseUrl}students/create`;\n    return this.http.post<ServerResponse<Student>>(url, postData).toPromise();\n  }\n\n  public getStudentById(id: string): Promise<ServerResponse<Student>> {\n    const url = `${this.baseUrl}students/${id}`;\n    return this.http.get<ServerResponse<Student>>(url).toPromise();\n  }\n\n  public downloadImage(imageId: string): Promise<Blob> {\n    const url = `${this.baseUrl}images/${imageId}`;\n    return this.http.get(url, { responseType: 'blob' }).toPromise();\n  }\n  public deleteStudent(id: string) {\n\n    const url = `${this.baseUrl}students/${id}`;\n    return this.http.delete<{ message: string, status: boolean }>(url).toPromise();\n  }\n\n  public updateStudent(student: Student, file?: File) {\n    console.log(student);\n    const postData = new FormData();\n    Object.keys(student).forEach((key) => {\n      postData.append(key, student[key]);\n    });\n    if (file) {\n      console.log(file);\n      postData.append('student-image', file, file.name);\n    }\n    console.log(postData);\n    const url = `${this.baseUrl}students/${student._id}`;\n    return this.http.put<ServerResponse<Student>>(url, postData).toPromise();\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Student } from '../models/student.model';\nimport { RestService } from '../services/rest.service';\nimport { StudentDetailComponent } from '../student-detail/student-detail.component';\n// import { timeStamp } from 'console';\nimport { ServerResponse } from '../models/server-response.model';\nimport { StateService } from '../services/state.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  filterDept: string = history.state.filterDept;\n  rowHeight;\n\n\n  filterYear: number = history.state.filterYear;\n  students: Student[] = history.state.students;\n  listView = true;\n\n  constructor(\n    public dialog: MatDialog,\n    private rest: RestService,\n    private state: StateService) {\n\n    this.fetchData();\n    this.state.listUpdates$.subscribe((message) => {\n      if (message === 'update') {\n        this.fetchData();\n      }\n    });\n    this.state.searchUpdates$.subscribe(results => this.students = results);\n  }\n\n  ngOnInit(): void {\n    this.filter();\n  }\n  async filter() {\n    let resp: ServerResponse<Student[]>;\n    if (this.filterYear && this.filterDept) {\n      resp = await this.rest.getStudents({ year: this.filterYear, department: this.filterDept });\n    }\n    else if (this.filterYear) {\n      resp = await this.rest.getStudents({ year: this.filterYear });\n    }\n    else if (this.filterDept) {\n      resp = await this.rest.getStudents({ department: this.filterDept });\n    }\n    this.students = resp.data;\n  }\n\n  async clearFilter() {\n    this.filterDept = '';\n    this.filterYear = null;\n    this.fetchData();\n  }\n\n  async fetchData() {\n\n    const resp = await this.rest.getAllStudents();\n\n    this.students = resp.data;\n    this.students.sort((a, b) => a.name.localeCompare(b.name));\n\n  }\n\n  openDialog(student: Student, index: number) {\n    // console.log(index);\n    const dialogRef = this.dialog.open(StudentDetailComponent, {\n      data: {\n        studentData: student,\n        id: index,\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n}\n","<!--For list of students-->\n<!-- <form class=\"example\" #searchText=\"ngForm\" (submit)=\"search(searchText)\" style=\"margin:0 auto;max-width:350px;\">\n  <input type=\"text\" placeholder=\"Search\" name=\"search\" ngModel>\n  <button type=\"submit\"><i class=\"fa fa-search\"></i></button>\n</form> -->\n<div class=\"input\" >\n  <mat-form-field style=\"margin: 10px;\">\n    <mat-label>Year</mat-label>\n    <mat-select [(ngModel)]=\"filterYear\">\n      <mat-option [value]=\"1\">1</mat-option>\n      <mat-option [value]=\"2\">2</mat-option>\n      <mat-option [value]=\"3\">3</mat-option>\n      <mat-option [value]=\"4\">4</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field style=\"margin: 10px;\">\n    <mat-label>Department</mat-label>\n    <mat-select [(ngModel)]=\"filterDept\">\n      <mat-option value=\"IT\">IT</mat-option>\n      <mat-option value=\"CSE\">CSE</mat-option>\n      <mat-option value=\"ECE\">ECE</mat-option>\n      <mat-option value=\"EE\">EE</mat-option>\n      <mat-option value=\"ME\">ME</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <button mat-button (click)=\"filter()\">Filter</button>\n  <button mat-button (click)=\"clearFilter()\">Clear</button>\n</div>\n\n  <span class=\"icon\" style=\"z-index: 5;\">\n    <button *ngIf=\"!listView\" (click)=\"listView=!listView\">\n      <mat-icon  fontSet=\"material-icons-outlined\">view_list</mat-icon>\n    </button>\n    <button *ngIf=\"listView\" (click)=\"listView=!listView\">\n      <mat-icon  fontSet=\"material-icons-outlined\">view_module</mat-icon>\n    </button>\n  </span>\n\n<div class=\"content\" *ngIf=\"listView\">\n  <mat-nav-list *ngFor=\"let student of students;let i=index\" class=\"list\" (click)=\"openDialog(student,i)\">\n    <mat-list-item matRipple>\n      <img matListAvatar [src]=\"'http://localhost:3000/images/'+student.image\" alt=\"img of {{student.name}}\">\n      <div mat-line style=\"margin-left: 7px;\">{{student.name}}</div>\n      <div mat-line style=\"margin-left: 7px;\"> {{student.department | uppercase}} </div>\n      <div mat-line style=\"margin-left: 7px;\"> {{student.passing_year +\" Batch\" }}</div>\n    </mat-list-item>\n    <mat-divider [inset]=\"true\"></mat-divider> \n\n  </mat-nav-list>\n</div>\n\n<div fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\" \n class=\"contentGrid\" *ngIf=\"!listView\" style=\"display:block;width:90%;\">\n    <div fxFlex=\"25%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\" *ngFor=\"let student of students;let i=index\" style=\"padding: 10px;\">\n      <mat-card matRipple class=\"card\" (click)=\"openDialog(student,i)\">\n        <mat-card-content>\n          <mat-list>\n            <mat-list-item>\n              <img matListAvatar [src]=\"'http://localhost:3000/images/'+student.image\" alt=\"img of {{student.name}}\">\n              <div mat-line><strong>{{student.name}}</strong></div>\n              <div mat-line> {{student.department | uppercase}} </div>\n              <!-- <div mat-line>{{student.year}}</div> -->\n              <div mat-line> {{student.passing_year +\" Batch\" }}</div>\n            </mat-list-item>\n          </mat-list>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n","import { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListComponent } from './list/list.component';\nimport { HeaderComponent } from './header/header.component';\nimport { CreateComponent } from './create/create.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LoginComponent } from './login/login.component';\nimport { UserComponent } from './user/user.component';\nimport { RegisterComponent } from './register/register.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'user',component:UserComponent},\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'list', component: ListComponent },\n  { path: 'newStudent', component: CreateComponent },\n  { path: 'editStudent', component: CreateComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { RoutesService } from '../services/routes.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { NgForm } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  hide = true;\n  registerUserData = <any>{};\n\n  login = true;\n  register = false;\n  constructor(public route: RoutesService,\n    private auth: AuthService,\n    public router: Router,\n    public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    if (this.auth.getLogin()) {\n      this.router.navigate(['dashboard']);\n    }\n  }\n\n  async loginUser(f: NgForm) {\n    const value = f.value;\n    console.log(value);\n    const { email, password } = value;\n    const resp = await this.auth.loginUser(email, password);\n    console.log(resp);\n    if (resp.status===true) {\n      this.auth.storeLogin(resp.data);\n      this.router.navigate(['dashboard']);\n    }\n    else{\n      alert(\"False\")\n    }\n    \n  }\n\n  tab() {\n    this.login = !this.login;\n  }\n}\n","<div class=\"content\">\n    <div class=\"login\">\n        <mat-card class=\"mat-elevation-z2\">\n            <mat-card-title style=\"text-align: center;margin-top: 20px;\">Login</mat-card-title>\n            <form (ngSubmit)=\"loginUser(f)\" #f=\"ngForm\">\n                <mat-form-field>\n                    <!-- <i class=\"fa fa-user  cust\" aria-hidden=\"true\"></i> -->\n                    <input matInput placeholder=\"Email\" type=\"email\" required name=\"email\" required ngModel\n                        #email=\"ngModel\">\n                    <mat-icon matSuffix style=\"font-size:18px;\">email</mat-icon>\n\n                </mat-form-field>\n                <mat-form-field>\n                    <!-- <i class=\"fa fa-lock  cust\" aria-hidden=\"true\"></i> -->\n                    <input matInput placeholder=\"Password\" [type]=\"hide ? 'password' : 'text'\" required name=\"password\"\n                        required ngModel #password=\"ngModel\">\n                    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                        [attr.aria-pressed]=\"hide\">\n                        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                    </button>\n                </mat-form-field>\n\n                <div class=\"options\">\n                    <mat-checkbox class=\"example-margin\">Remember Me?</mat-checkbox>\n                    <a class=\"forgotPwd\">Forgot your password?</a>\n                </div>\n                <mat-card-actions><button [disabled]=\"!f.valid\" mat-raised-button style=\"margin-top: 10px;\"\n                        color=\"primary\" type=\"submit\">Login</button></mat-card-actions>\n                <mat-card-actions style=\"text-align:center;\"><span>New User?</span>\n                    <button style=\"width:18%;text-align: center;\" mat-button (click)=\"router.navigate(['register'])\"  type=\"button\">\n                        SignUp\n                        </button>\n                </mat-card-actions>\n            </form>\n\n        </mat-card>\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}